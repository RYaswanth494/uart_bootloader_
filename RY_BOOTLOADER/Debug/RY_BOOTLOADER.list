
RY_BOOTLOADER.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001468  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000054  08001574  08001574  00002574  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015c8  080015c8  00003060  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080015c8  080015c8  00003060  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080015c8  080015c8  00003060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015c8  080015c8  000025c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080015cc  080015cc  000025cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000060  20000000  080015d0  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  20000060  08001630  00003060  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001d0  08001630  000031d0  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00003060  2**0
                  CONTENTS, READONLY
 12 .debug_info   00005779  00000000  00000000  00003089  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000cea  00000000  00000000  00008802  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000340  00000000  00000000  000094f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000241  00000000  00000000  00009830  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00016732  00000000  00000000  00009a71  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000046d5  00000000  00000000  000201a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008257a  00000000  00000000  00024878  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000a6df2  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001218  00000000  00000000  000a6e38  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000070  00000000  00000000  000a8050  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000060 	.word	0x20000060
 8000128:	00000000 	.word	0x00000000
 800012c:	0800155c 	.word	0x0800155c

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000064 	.word	0x20000064
 8000148:	0800155c 	.word	0x0800155c

0800014c <LED_INIT>:
 800014c:	b480      	push	{r7}
 800014e:	af00      	add	r7, sp, #0
 8000150:	4a09      	ldr	r2, [pc, #36]	@ (8000178 <LED_INIT+0x2c>)
 8000152:	6993      	ldr	r3, [r2, #24]
 8000154:	f043 0308 	orr.w	r3, r3, #8
 8000158:	6193      	str	r3, [r2, #24]
 800015a:	4a08      	ldr	r2, [pc, #32]	@ (800017c <LED_INIT+0x30>)
 800015c:	6813      	ldr	r3, [r2, #0]
 800015e:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 8000162:	6013      	str	r3, [r2, #0]
 8000164:	4a05      	ldr	r2, [pc, #20]	@ (800017c <LED_INIT+0x30>)
 8000166:	6813      	ldr	r3, [r2, #0]
 8000168:	2102      	movs	r1, #2
 800016a:	f361 2309 	bfi	r3, r1, #8, #2
 800016e:	6013      	str	r3, [r2, #0]
 8000170:	bf00      	nop
 8000172:	46bd      	mov	sp, r7
 8000174:	bc80      	pop	{r7}
 8000176:	4770      	bx	lr
 8000178:	40021000 	.word	0x40021000
 800017c:	40010c00 	.word	0x40010c00

08000180 <RCC_SYSTEM_CLOCK_HSE>:
 8000180:	b480      	push	{r7}
 8000182:	af00      	add	r7, sp, #0
 8000184:	4a0f      	ldr	r2, [pc, #60]	@ (80001c4 <RCC_SYSTEM_CLOCK_HSE+0x44>)
 8000186:	6813      	ldr	r3, [r2, #0]
 8000188:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800018c:	6013      	str	r3, [r2, #0]
 800018e:	bf00      	nop
 8000190:	4b0c      	ldr	r3, [pc, #48]	@ (80001c4 <RCC_SYSTEM_CLOCK_HSE+0x44>)
 8000192:	681b      	ldr	r3, [r3, #0]
 8000194:	f3c3 4340 	ubfx	r3, r3, #17, #1
 8000198:	b2db      	uxtb	r3, r3
 800019a:	2b00      	cmp	r3, #0
 800019c:	d0f8      	beq.n	8000190 <RCC_SYSTEM_CLOCK_HSE+0x10>
 800019e:	4a09      	ldr	r2, [pc, #36]	@ (80001c4 <RCC_SYSTEM_CLOCK_HSE+0x44>)
 80001a0:	6853      	ldr	r3, [r2, #4]
 80001a2:	2101      	movs	r1, #1
 80001a4:	f361 0301 	bfi	r3, r1, #0, #2
 80001a8:	6053      	str	r3, [r2, #4]
 80001aa:	bf00      	nop
 80001ac:	4b05      	ldr	r3, [pc, #20]	@ (80001c4 <RCC_SYSTEM_CLOCK_HSE+0x44>)
 80001ae:	685b      	ldr	r3, [r3, #4]
 80001b0:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80001b4:	b2db      	uxtb	r3, r3
 80001b6:	2b01      	cmp	r3, #1
 80001b8:	d1f8      	bne.n	80001ac <RCC_SYSTEM_CLOCK_HSE+0x2c>
 80001ba:	bf00      	nop
 80001bc:	bf00      	nop
 80001be:	46bd      	mov	sp, r7
 80001c0:	bc80      	pop	{r7}
 80001c2:	4770      	bx	lr
 80001c4:	40021000 	.word	0x40021000

080001c8 <SetBaudRate>:
#define RCC_RY_USART1EN (1 << 14)

#define RCC_IOPAEN      (1 << 2)
/* ==== Function Implementations ==== */

 UART_Status_t SetBaudRate(uint32_t baudrate) {
 80001c8:	b480      	push	{r7}
 80001ca:	b085      	sub	sp, #20
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	6078      	str	r0, [r7, #4]
    if (baudrate == 0) return UART_ERROR;
 80001d0:	687b      	ldr	r3, [r7, #4]
 80001d2:	2b00      	cmp	r3, #0
 80001d4:	d101      	bne.n	80001da <SetBaudRate+0x12>
 80001d6:	2301      	movs	r3, #1
 80001d8:	e01d      	b.n	8000216 <SetBaudRate+0x4e>
    uint32_t pclk = 8000000;
 80001da:	4b11      	ldr	r3, [pc, #68]	@ (8000220 <SetBaudRate+0x58>)
 80001dc:	60fb      	str	r3, [r7, #12]
    uint32_t RY_USARTdiv = (pclk + (baudrate / 2)) / baudrate;
 80001de:	687b      	ldr	r3, [r7, #4]
 80001e0:	085a      	lsrs	r2, r3, #1
 80001e2:	68fb      	ldr	r3, [r7, #12]
 80001e4:	441a      	add	r2, r3
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	fbb2 f3f3 	udiv	r3, r2, r3
 80001ec:	60bb      	str	r3, [r7, #8]
    RY_USART1->BRR.BITS.DIV_Mantissa = (RY_USARTdiv >> 4) & 0xFFF;
 80001ee:	68bb      	ldr	r3, [r7, #8]
 80001f0:	091b      	lsrs	r3, r3, #4
 80001f2:	4a0c      	ldr	r2, [pc, #48]	@ (8000224 <SetBaudRate+0x5c>)
 80001f4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80001f8:	b299      	uxth	r1, r3
 80001fa:	6893      	ldr	r3, [r2, #8]
 80001fc:	f361 130f 	bfi	r3, r1, #4, #12
 8000200:	6093      	str	r3, [r2, #8]
    RY_USART1->BRR.BITS.DIV_Fraction = RY_USARTdiv & 0xF;
 8000202:	4a08      	ldr	r2, [pc, #32]	@ (8000224 <SetBaudRate+0x5c>)
 8000204:	68bb      	ldr	r3, [r7, #8]
 8000206:	f003 030f 	and.w	r3, r3, #15
 800020a:	b2d9      	uxtb	r1, r3
 800020c:	6893      	ldr	r3, [r2, #8]
 800020e:	f361 0303 	bfi	r3, r1, #0, #4
 8000212:	6093      	str	r3, [r2, #8]
    return UART_OK;
 8000214:	2300      	movs	r3, #0
}
 8000216:	4618      	mov	r0, r3
 8000218:	3714      	adds	r7, #20
 800021a:	46bd      	mov	sp, r7
 800021c:	bc80      	pop	{r7}
 800021e:	4770      	bx	lr
 8000220:	007a1200 	.word	0x007a1200
 8000224:	40013800 	.word	0x40013800

08000228 <UART1_INIT>:
UART_Status_t UART1_INIT(uint32_t baud_rate){
 8000228:	b580      	push	{r7, lr}
 800022a:	b082      	sub	sp, #8
 800022c:	af00      	add	r7, sp, #0
 800022e:	6078      	str	r0, [r7, #4]
	RY_RCC->APB2ENR.BITS.USART1EN=0;
 8000230:	4a27      	ldr	r2, [pc, #156]	@ (80002d0 <UART1_INIT+0xa8>)
 8000232:	6993      	ldr	r3, [r2, #24]
 8000234:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8000238:	6193      	str	r3, [r2, #24]
	RY_RCC->APB2ENR.BITS.USART1EN=1;
 800023a:	4a25      	ldr	r2, [pc, #148]	@ (80002d0 <UART1_INIT+0xa8>)
 800023c:	6993      	ldr	r3, [r2, #24]
 800023e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000242:	6193      	str	r3, [r2, #24]
	RY_RCC->APB2ENR.BITS.IOPAEN=0;
 8000244:	4a22      	ldr	r2, [pc, #136]	@ (80002d0 <UART1_INIT+0xa8>)
 8000246:	6993      	ldr	r3, [r2, #24]
 8000248:	f023 0304 	bic.w	r3, r3, #4
 800024c:	6193      	str	r3, [r2, #24]
	RY_RCC->APB2ENR.BITS.IOPAEN=1;
 800024e:	4a20      	ldr	r2, [pc, #128]	@ (80002d0 <UART1_INIT+0xa8>)
 8000250:	6993      	ldr	r3, [r2, #24]
 8000252:	f043 0304 	orr.w	r3, r3, #4
 8000256:	6193      	str	r3, [r2, #24]
	//GPIOA->CRH.REG&= ~(0xF << 4);
	RY_GPIOA->CRH.BITS.CNF9=0b10;
 8000258:	4a1e      	ldr	r2, [pc, #120]	@ (80002d4 <UART1_INIT+0xac>)
 800025a:	6853      	ldr	r3, [r2, #4]
 800025c:	2102      	movs	r1, #2
 800025e:	f361 1387 	bfi	r3, r1, #6, #2
 8000262:	6053      	str	r3, [r2, #4]
	RY_GPIOA->CRH.BITS.MODE9=0b11;
 8000264:	4a1b      	ldr	r2, [pc, #108]	@ (80002d4 <UART1_INIT+0xac>)
 8000266:	6853      	ldr	r3, [r2, #4]
 8000268:	f043 0330 	orr.w	r3, r3, #48	@ 0x30
 800026c:	6053      	str	r3, [r2, #4]
	RY_GPIOA->CRH.BITS.CNF10=0b01;
 800026e:	4a19      	ldr	r2, [pc, #100]	@ (80002d4 <UART1_INIT+0xac>)
 8000270:	6853      	ldr	r3, [r2, #4]
 8000272:	2101      	movs	r1, #1
 8000274:	f361 238b 	bfi	r3, r1, #10, #2
 8000278:	6053      	str	r3, [r2, #4]
	RY_GPIOA->CRH.BITS.MODE10=0b00;
 800027a:	4a16      	ldr	r2, [pc, #88]	@ (80002d4 <UART1_INIT+0xac>)
 800027c:	6853      	ldr	r3, [r2, #4]
 800027e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8000282:	6053      	str	r3, [r2, #4]
	RY_USART1->CR1.BITS.UE=0;
 8000284:	4a14      	ldr	r2, [pc, #80]	@ (80002d8 <UART1_INIT+0xb0>)
 8000286:	68d3      	ldr	r3, [r2, #12]
 8000288:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800028c:	60d3      	str	r3, [r2, #12]
	RY_USART1->CR1.BITS.TE=0;
 800028e:	4a12      	ldr	r2, [pc, #72]	@ (80002d8 <UART1_INIT+0xb0>)
 8000290:	68d3      	ldr	r3, [r2, #12]
 8000292:	f023 0308 	bic.w	r3, r3, #8
 8000296:	60d3      	str	r3, [r2, #12]
	RY_USART1->CR1.BITS.TE=1;
 8000298:	4a0f      	ldr	r2, [pc, #60]	@ (80002d8 <UART1_INIT+0xb0>)
 800029a:	68d3      	ldr	r3, [r2, #12]
 800029c:	f043 0308 	orr.w	r3, r3, #8
 80002a0:	60d3      	str	r3, [r2, #12]
	RY_USART1->CR1.BITS.RE=0;
 80002a2:	4a0d      	ldr	r2, [pc, #52]	@ (80002d8 <UART1_INIT+0xb0>)
 80002a4:	68d3      	ldr	r3, [r2, #12]
 80002a6:	f023 0304 	bic.w	r3, r3, #4
 80002aa:	60d3      	str	r3, [r2, #12]
	RY_USART1->CR1.BITS.RE=1;
 80002ac:	4a0a      	ldr	r2, [pc, #40]	@ (80002d8 <UART1_INIT+0xb0>)
 80002ae:	68d3      	ldr	r3, [r2, #12]
 80002b0:	f043 0304 	orr.w	r3, r3, #4
 80002b4:	60d3      	str	r3, [r2, #12]
	SetBaudRate(baud_rate);
 80002b6:	6878      	ldr	r0, [r7, #4]
 80002b8:	f7ff ff86 	bl	80001c8 <SetBaudRate>
	RY_USART1->CR1.BITS.UE=1;
 80002bc:	4a06      	ldr	r2, [pc, #24]	@ (80002d8 <UART1_INIT+0xb0>)
 80002be:	68d3      	ldr	r3, [r2, #12]
 80002c0:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80002c4:	60d3      	str	r3, [r2, #12]
	return UART_OK;
 80002c6:	2300      	movs	r3, #0
}
 80002c8:	4618      	mov	r0, r3
 80002ca:	3708      	adds	r7, #8
 80002cc:	46bd      	mov	sp, r7
 80002ce:	bd80      	pop	{r7, pc}
 80002d0:	40021000 	.word	0x40021000
 80002d4:	40010800 	.word	0x40010800
 80002d8:	40013800 	.word	0x40013800

080002dc <SendByte>:
UART_Status_t SendByte(uint8_t byte){
 80002dc:	b480      	push	{r7}
 80002de:	b083      	sub	sp, #12
 80002e0:	af00      	add	r7, sp, #0
 80002e2:	4603      	mov	r3, r0
 80002e4:	71fb      	strb	r3, [r7, #7]
    while (!RY_USART1->SR.BITS.TXE);
 80002e6:	bf00      	nop
 80002e8:	4b0a      	ldr	r3, [pc, #40]	@ (8000314 <SendByte+0x38>)
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 80002f0:	b2db      	uxtb	r3, r3
 80002f2:	2b00      	cmp	r3, #0
 80002f4:	d0f8      	beq.n	80002e8 <SendByte+0xc>
    RY_USART1->DR.BITS.DR = byte;
 80002f6:	4a07      	ldr	r2, [pc, #28]	@ (8000314 <SendByte+0x38>)
 80002f8:	79fb      	ldrb	r3, [r7, #7]
 80002fa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80002fe:	b299      	uxth	r1, r3
 8000300:	6853      	ldr	r3, [r2, #4]
 8000302:	f361 0308 	bfi	r3, r1, #0, #9
 8000306:	6053      	str	r3, [r2, #4]
    return UART_OK;
 8000308:	2300      	movs	r3, #0
}
 800030a:	4618      	mov	r0, r3
 800030c:	370c      	adds	r7, #12
 800030e:	46bd      	mov	sp, r7
 8000310:	bc80      	pop	{r7}
 8000312:	4770      	bx	lr
 8000314:	40013800 	.word	0x40013800

08000318 <SendString>:
UART_Status_t SendString(const char *str) {
 8000318:	b580      	push	{r7, lr}
 800031a:	b082      	sub	sp, #8
 800031c:	af00      	add	r7, sp, #0
 800031e:	6078      	str	r0, [r7, #4]
   while (*str) {
 8000320:	e00b      	b.n	800033a <SendString+0x22>
       if (SendByte((uint8_t)(*str++)) != UART_OK)
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	1c5a      	adds	r2, r3, #1
 8000326:	607a      	str	r2, [r7, #4]
 8000328:	781b      	ldrb	r3, [r3, #0]
 800032a:	4618      	mov	r0, r3
 800032c:	f7ff ffd6 	bl	80002dc <SendByte>
 8000330:	4603      	mov	r3, r0
 8000332:	2b00      	cmp	r3, #0
 8000334:	d001      	beq.n	800033a <SendString+0x22>
           return UART_ERROR;
 8000336:	2301      	movs	r3, #1
 8000338:	e004      	b.n	8000344 <SendString+0x2c>
   while (*str) {
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	781b      	ldrb	r3, [r3, #0]
 800033e:	2b00      	cmp	r3, #0
 8000340:	d1ef      	bne.n	8000322 <SendString+0xa>
   }
   return UART_OK;
 8000342:	2300      	movs	r3, #0
}
 8000344:	4618      	mov	r0, r3
 8000346:	3708      	adds	r7, #8
 8000348:	46bd      	mov	sp, r7
 800034a:	bd80      	pop	{r7, pc}

0800034c <SetBaudRate_USART2>:
//    return len;
//}



UART_Status_t SetBaudRate_USART2(uint32_t baudrate) {
 800034c:	b480      	push	{r7}
 800034e:	b085      	sub	sp, #20
 8000350:	af00      	add	r7, sp, #0
 8000352:	6078      	str	r0, [r7, #4]
   if (baudrate == 0) return UART_ERROR;
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	2b00      	cmp	r3, #0
 8000358:	d101      	bne.n	800035e <SetBaudRate_USART2+0x12>
 800035a:	2301      	movs	r3, #1
 800035c:	e01d      	b.n	800039a <SetBaudRate_USART2+0x4e>
   uint32_t pclk = 8000000;
 800035e:	4b11      	ldr	r3, [pc, #68]	@ (80003a4 <SetBaudRate_USART2+0x58>)
 8000360:	60fb      	str	r3, [r7, #12]
   uint32_t RY_USARTdiv = (pclk + (baudrate / 2)) / baudrate;
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	085a      	lsrs	r2, r3, #1
 8000366:	68fb      	ldr	r3, [r7, #12]
 8000368:	441a      	add	r2, r3
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	fbb2 f3f3 	udiv	r3, r2, r3
 8000370:	60bb      	str	r3, [r7, #8]
   RY_USART2->BRR.BITS.DIV_Mantissa = (RY_USARTdiv >> 4) & 0xFFF;
 8000372:	68bb      	ldr	r3, [r7, #8]
 8000374:	091b      	lsrs	r3, r3, #4
 8000376:	4a0c      	ldr	r2, [pc, #48]	@ (80003a8 <SetBaudRate_USART2+0x5c>)
 8000378:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800037c:	b299      	uxth	r1, r3
 800037e:	6893      	ldr	r3, [r2, #8]
 8000380:	f361 130f 	bfi	r3, r1, #4, #12
 8000384:	6093      	str	r3, [r2, #8]
   RY_USART2->BRR.BITS.DIV_Fraction = RY_USARTdiv & 0xF;
 8000386:	4a08      	ldr	r2, [pc, #32]	@ (80003a8 <SetBaudRate_USART2+0x5c>)
 8000388:	68bb      	ldr	r3, [r7, #8]
 800038a:	f003 030f 	and.w	r3, r3, #15
 800038e:	b2d9      	uxtb	r1, r3
 8000390:	6893      	ldr	r3, [r2, #8]
 8000392:	f361 0303 	bfi	r3, r1, #0, #4
 8000396:	6093      	str	r3, [r2, #8]
   return UART_OK;
 8000398:	2300      	movs	r3, #0
}
 800039a:	4618      	mov	r0, r3
 800039c:	3714      	adds	r7, #20
 800039e:	46bd      	mov	sp, r7
 80003a0:	bc80      	pop	{r7}
 80003a2:	4770      	bx	lr
 80003a4:	007a1200 	.word	0x007a1200
 80003a8:	40004400 	.word	0x40004400

080003ac <UART2_INIT>:
UART_Status_t UART2_INIT(uint32_t baud_rate) {
 80003ac:	b580      	push	{r7, lr}
 80003ae:	b082      	sub	sp, #8
 80003b0:	af00      	add	r7, sp, #0
 80003b2:	6078      	str	r0, [r7, #4]
    // Enable USART2 and GPIOA clocks
    RY_RCC->APB1ENR.BITS.USART2EN = 0;
 80003b4:	4a27      	ldr	r2, [pc, #156]	@ (8000454 <UART2_INIT+0xa8>)
 80003b6:	69d3      	ldr	r3, [r2, #28]
 80003b8:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 80003bc:	61d3      	str	r3, [r2, #28]
    RY_RCC->APB1ENR.BITS.USART2EN = 1;
 80003be:	4a25      	ldr	r2, [pc, #148]	@ (8000454 <UART2_INIT+0xa8>)
 80003c0:	69d3      	ldr	r3, [r2, #28]
 80003c2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80003c6:	61d3      	str	r3, [r2, #28]
    RY_RCC->APB2ENR.BITS.IOPAEN = 0;
 80003c8:	4a22      	ldr	r2, [pc, #136]	@ (8000454 <UART2_INIT+0xa8>)
 80003ca:	6993      	ldr	r3, [r2, #24]
 80003cc:	f023 0304 	bic.w	r3, r3, #4
 80003d0:	6193      	str	r3, [r2, #24]
    RY_RCC->APB2ENR.BITS.IOPAEN = 1;
 80003d2:	4a20      	ldr	r2, [pc, #128]	@ (8000454 <UART2_INIT+0xa8>)
 80003d4:	6993      	ldr	r3, [r2, #24]
 80003d6:	f043 0304 	orr.w	r3, r3, #4
 80003da:	6193      	str	r3, [r2, #24]
    // Configure PA2 (TX) as Alternate function push-pull, 50MHz
    RY_GPIOA->CRL.BITS.CNF2 = 0b10;  // AF Push-Pull
 80003dc:	4a1e      	ldr	r2, [pc, #120]	@ (8000458 <UART2_INIT+0xac>)
 80003de:	6813      	ldr	r3, [r2, #0]
 80003e0:	2102      	movs	r1, #2
 80003e2:	f361 238b 	bfi	r3, r1, #10, #2
 80003e6:	6013      	str	r3, [r2, #0]
    RY_GPIOA->CRL.BITS.MODE2 = 0b11; // Output mode, max speed 50 MHz
 80003e8:	4a1b      	ldr	r2, [pc, #108]	@ (8000458 <UART2_INIT+0xac>)
 80003ea:	6813      	ldr	r3, [r2, #0]
 80003ec:	f443 7340 	orr.w	r3, r3, #768	@ 0x300
 80003f0:	6013      	str	r3, [r2, #0]
    // Configure PA3 (RX) as Input floating
    RY_GPIOA->CRL.BITS.CNF3 = 0b01;  // Floating input
 80003f2:	4a19      	ldr	r2, [pc, #100]	@ (8000458 <UART2_INIT+0xac>)
 80003f4:	6813      	ldr	r3, [r2, #0]
 80003f6:	2101      	movs	r1, #1
 80003f8:	f361 338f 	bfi	r3, r1, #14, #2
 80003fc:	6013      	str	r3, [r2, #0]
    RY_GPIOA->CRL.BITS.MODE3 = 0b00; // Input mode
 80003fe:	4a16      	ldr	r2, [pc, #88]	@ (8000458 <UART2_INIT+0xac>)
 8000400:	6813      	ldr	r3, [r2, #0]
 8000402:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8000406:	6013      	str	r3, [r2, #0]
    // Disable USART2 before configuration
    RY_USART2->CR1.BITS.UE = 0;
 8000408:	4a14      	ldr	r2, [pc, #80]	@ (800045c <UART2_INIT+0xb0>)
 800040a:	68d3      	ldr	r3, [r2, #12]
 800040c:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8000410:	60d3      	str	r3, [r2, #12]
    // Enable Transmitter and Receiver
    RY_USART2->CR1.BITS.TE = 0;
 8000412:	4a12      	ldr	r2, [pc, #72]	@ (800045c <UART2_INIT+0xb0>)
 8000414:	68d3      	ldr	r3, [r2, #12]
 8000416:	f023 0308 	bic.w	r3, r3, #8
 800041a:	60d3      	str	r3, [r2, #12]
    RY_USART2->CR1.BITS.TE = 1;
 800041c:	4a0f      	ldr	r2, [pc, #60]	@ (800045c <UART2_INIT+0xb0>)
 800041e:	68d3      	ldr	r3, [r2, #12]
 8000420:	f043 0308 	orr.w	r3, r3, #8
 8000424:	60d3      	str	r3, [r2, #12]
    RY_USART2->CR1.BITS.RE = 0;
 8000426:	4a0d      	ldr	r2, [pc, #52]	@ (800045c <UART2_INIT+0xb0>)
 8000428:	68d3      	ldr	r3, [r2, #12]
 800042a:	f023 0304 	bic.w	r3, r3, #4
 800042e:	60d3      	str	r3, [r2, #12]
    RY_USART2->CR1.BITS.RE = 1;
 8000430:	4a0a      	ldr	r2, [pc, #40]	@ (800045c <UART2_INIT+0xb0>)
 8000432:	68d3      	ldr	r3, [r2, #12]
 8000434:	f043 0304 	orr.w	r3, r3, #4
 8000438:	60d3      	str	r3, [r2, #12]
    // Set baud rate
    SetBaudRate_USART2(baud_rate); // <- You must write this for USART2
 800043a:	6878      	ldr	r0, [r7, #4]
 800043c:	f7ff ff86 	bl	800034c <SetBaudRate_USART2>
    // Enable USART2
    RY_USART2->CR1.BITS.UE = 1;
 8000440:	4a06      	ldr	r2, [pc, #24]	@ (800045c <UART2_INIT+0xb0>)
 8000442:	68d3      	ldr	r3, [r2, #12]
 8000444:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000448:	60d3      	str	r3, [r2, #12]

    return UART_OK;
 800044a:	2300      	movs	r3, #0
}
 800044c:	4618      	mov	r0, r3
 800044e:	3708      	adds	r7, #8
 8000450:	46bd      	mov	sp, r7
 8000452:	bd80      	pop	{r7, pc}
 8000454:	40021000 	.word	0x40021000
 8000458:	40010800 	.word	0x40010800
 800045c:	40004400 	.word	0x40004400

08000460 <main>:
#define CMD_SIZE   0x10
#define CMD_BEGIN  0x01
#define CMD_DATA   0x02
#define CMD_END    0x03
volatile uint32_t firmware_size = 0;
int main(){
 8000460:	b580      	push	{r7, lr}
 8000462:	b082      	sub	sp, #8
 8000464:	af00      	add	r7, sp, #0
	RCC_SYSTEM_CLOCK_HSE();
 8000466:	f7ff fe8b 	bl	8000180 <RCC_SYSTEM_CLOCK_HSE>
	//RCC_SYSTEM_CLOCK_HSEPLL_72MHZ();
	LED_INIT();
 800046a:	f7ff fe6f 	bl	800014c <LED_INIT>
	UART1_INIT(BAUD_RATE);
 800046e:	f44f 30e1 	mov.w	r0, #115200	@ 0x1c200
 8000472:	f7ff fed9 	bl	8000228 <UART1_INIT>
	UART2_INIT(BAUD_RATE);
 8000476:	f44f 30e1 	mov.w	r0, #115200	@ 0x1c200
 800047a:	f7ff ff97 	bl	80003ac <UART2_INIT>
	printf("UART1 BOOTLOADER");
 800047e:	4812      	ldr	r0, [pc, #72]	@ (80004c8 <main+0x68>)
 8000480:	f000 f9f6 	bl	8000870 <iprintf>
	//uart1_init();
  //  SYSTEM_CLOCK_TEST();
	while(1){
        SendString("kfngkfjgjj");
 8000484:	4811      	ldr	r0, [pc, #68]	@ (80004cc <main+0x6c>)
 8000486:	f7ff ff47 	bl	8000318 <SendString>
		RY_GPIOB->ODR.BITS.ODR2=1;
 800048a:	4a11      	ldr	r2, [pc, #68]	@ (80004d0 <main+0x70>)
 800048c:	68d3      	ldr	r3, [r2, #12]
 800048e:	f043 0304 	orr.w	r3, r3, #4
 8000492:	60d3      	str	r3, [r2, #12]
		for(int i=0;i<100000;i++);
 8000494:	2300      	movs	r3, #0
 8000496:	607b      	str	r3, [r7, #4]
 8000498:	e002      	b.n	80004a0 <main+0x40>
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	3301      	adds	r3, #1
 800049e:	607b      	str	r3, [r7, #4]
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	4a0c      	ldr	r2, [pc, #48]	@ (80004d4 <main+0x74>)
 80004a4:	4293      	cmp	r3, r2
 80004a6:	ddf8      	ble.n	800049a <main+0x3a>
		RY_GPIOB->ODR.BITS.ODR2=0;
 80004a8:	4a09      	ldr	r2, [pc, #36]	@ (80004d0 <main+0x70>)
 80004aa:	68d3      	ldr	r3, [r2, #12]
 80004ac:	f023 0304 	bic.w	r3, r3, #4
 80004b0:	60d3      	str	r3, [r2, #12]
		for(int i=0;i<100000;i++);
 80004b2:	2300      	movs	r3, #0
 80004b4:	603b      	str	r3, [r7, #0]
 80004b6:	e002      	b.n	80004be <main+0x5e>
 80004b8:	683b      	ldr	r3, [r7, #0]
 80004ba:	3301      	adds	r3, #1
 80004bc:	603b      	str	r3, [r7, #0]
 80004be:	683b      	ldr	r3, [r7, #0]
 80004c0:	4a04      	ldr	r2, [pc, #16]	@ (80004d4 <main+0x74>)
 80004c2:	4293      	cmp	r3, r2
 80004c4:	ddf8      	ble.n	80004b8 <main+0x58>
        SendString("kfngkfjgjj");
 80004c6:	e7dd      	b.n	8000484 <main+0x24>
 80004c8:	08001574 	.word	0x08001574
 80004cc:	08001588 	.word	0x08001588
 80004d0:	40010c00 	.word	0x40010c00
 80004d4:	0001869f 	.word	0x0001869f

080004d8 <NMI_Handler>:
 80004d8:	b480      	push	{r7}
 80004da:	af00      	add	r7, sp, #0
 80004dc:	bf00      	nop
 80004de:	e7fd      	b.n	80004dc <NMI_Handler+0x4>

080004e0 <HardFault_Handler>:
 80004e0:	b480      	push	{r7}
 80004e2:	af00      	add	r7, sp, #0
 80004e4:	bf00      	nop
 80004e6:	e7fd      	b.n	80004e4 <HardFault_Handler+0x4>

080004e8 <MemManage_Handler>:
 80004e8:	b480      	push	{r7}
 80004ea:	af00      	add	r7, sp, #0
 80004ec:	bf00      	nop
 80004ee:	e7fd      	b.n	80004ec <MemManage_Handler+0x4>

080004f0 <BusFault_Handler>:
 80004f0:	b480      	push	{r7}
 80004f2:	af00      	add	r7, sp, #0
 80004f4:	bf00      	nop
 80004f6:	e7fd      	b.n	80004f4 <BusFault_Handler+0x4>

080004f8 <UsageFault_Handler>:
 80004f8:	b480      	push	{r7}
 80004fa:	af00      	add	r7, sp, #0
 80004fc:	bf00      	nop
 80004fe:	e7fd      	b.n	80004fc <UsageFault_Handler+0x4>

08000500 <SVC_Handler>:
 8000500:	b480      	push	{r7}
 8000502:	af00      	add	r7, sp, #0
 8000504:	bf00      	nop
 8000506:	46bd      	mov	sp, r7
 8000508:	bc80      	pop	{r7}
 800050a:	4770      	bx	lr

0800050c <DebugMon_Handler>:
 800050c:	b480      	push	{r7}
 800050e:	af00      	add	r7, sp, #0
 8000510:	bf00      	nop
 8000512:	46bd      	mov	sp, r7
 8000514:	bc80      	pop	{r7}
 8000516:	4770      	bx	lr

08000518 <PendSV_Handler>:
 8000518:	b480      	push	{r7}
 800051a:	af00      	add	r7, sp, #0
 800051c:	bf00      	nop
 800051e:	46bd      	mov	sp, r7
 8000520:	bc80      	pop	{r7}
 8000522:	4770      	bx	lr

08000524 <SysTick_Handler>:
 8000524:	b580      	push	{r7, lr}
 8000526:	af00      	add	r7, sp, #0
 8000528:	f000 f8ce 	bl	80006c8 <HAL_IncTick>
 800052c:	bf00      	nop
 800052e:	bd80      	pop	{r7, pc}

08000530 <_read>:
 8000530:	b580      	push	{r7, lr}
 8000532:	b086      	sub	sp, #24
 8000534:	af00      	add	r7, sp, #0
 8000536:	60f8      	str	r0, [r7, #12]
 8000538:	60b9      	str	r1, [r7, #8]
 800053a:	607a      	str	r2, [r7, #4]
 800053c:	2300      	movs	r3, #0
 800053e:	617b      	str	r3, [r7, #20]
 8000540:	e00a      	b.n	8000558 <_read+0x28>
 8000542:	f3af 8000 	nop.w
 8000546:	4601      	mov	r1, r0
 8000548:	68bb      	ldr	r3, [r7, #8]
 800054a:	1c5a      	adds	r2, r3, #1
 800054c:	60ba      	str	r2, [r7, #8]
 800054e:	b2ca      	uxtb	r2, r1
 8000550:	701a      	strb	r2, [r3, #0]
 8000552:	697b      	ldr	r3, [r7, #20]
 8000554:	3301      	adds	r3, #1
 8000556:	617b      	str	r3, [r7, #20]
 8000558:	697a      	ldr	r2, [r7, #20]
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	429a      	cmp	r2, r3
 800055e:	dbf0      	blt.n	8000542 <_read+0x12>
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	4618      	mov	r0, r3
 8000564:	3718      	adds	r7, #24
 8000566:	46bd      	mov	sp, r7
 8000568:	bd80      	pop	{r7, pc}

0800056a <_write>:
 800056a:	b580      	push	{r7, lr}
 800056c:	b086      	sub	sp, #24
 800056e:	af00      	add	r7, sp, #0
 8000570:	60f8      	str	r0, [r7, #12]
 8000572:	60b9      	str	r1, [r7, #8]
 8000574:	607a      	str	r2, [r7, #4]
 8000576:	2300      	movs	r3, #0
 8000578:	617b      	str	r3, [r7, #20]
 800057a:	e009      	b.n	8000590 <_write+0x26>
 800057c:	68bb      	ldr	r3, [r7, #8]
 800057e:	1c5a      	adds	r2, r3, #1
 8000580:	60ba      	str	r2, [r7, #8]
 8000582:	781b      	ldrb	r3, [r3, #0]
 8000584:	4618      	mov	r0, r3
 8000586:	f3af 8000 	nop.w
 800058a:	697b      	ldr	r3, [r7, #20]
 800058c:	3301      	adds	r3, #1
 800058e:	617b      	str	r3, [r7, #20]
 8000590:	697a      	ldr	r2, [r7, #20]
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	429a      	cmp	r2, r3
 8000596:	dbf1      	blt.n	800057c <_write+0x12>
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	4618      	mov	r0, r3
 800059c:	3718      	adds	r7, #24
 800059e:	46bd      	mov	sp, r7
 80005a0:	bd80      	pop	{r7, pc}

080005a2 <_close>:
 80005a2:	b480      	push	{r7}
 80005a4:	b083      	sub	sp, #12
 80005a6:	af00      	add	r7, sp, #0
 80005a8:	6078      	str	r0, [r7, #4]
 80005aa:	f04f 33ff 	mov.w	r3, #4294967295
 80005ae:	4618      	mov	r0, r3
 80005b0:	370c      	adds	r7, #12
 80005b2:	46bd      	mov	sp, r7
 80005b4:	bc80      	pop	{r7}
 80005b6:	4770      	bx	lr

080005b8 <_fstat>:
 80005b8:	b480      	push	{r7}
 80005ba:	b083      	sub	sp, #12
 80005bc:	af00      	add	r7, sp, #0
 80005be:	6078      	str	r0, [r7, #4]
 80005c0:	6039      	str	r1, [r7, #0]
 80005c2:	683b      	ldr	r3, [r7, #0]
 80005c4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80005c8:	605a      	str	r2, [r3, #4]
 80005ca:	2300      	movs	r3, #0
 80005cc:	4618      	mov	r0, r3
 80005ce:	370c      	adds	r7, #12
 80005d0:	46bd      	mov	sp, r7
 80005d2:	bc80      	pop	{r7}
 80005d4:	4770      	bx	lr

080005d6 <_isatty>:
 80005d6:	b480      	push	{r7}
 80005d8:	b083      	sub	sp, #12
 80005da:	af00      	add	r7, sp, #0
 80005dc:	6078      	str	r0, [r7, #4]
 80005de:	2301      	movs	r3, #1
 80005e0:	4618      	mov	r0, r3
 80005e2:	370c      	adds	r7, #12
 80005e4:	46bd      	mov	sp, r7
 80005e6:	bc80      	pop	{r7}
 80005e8:	4770      	bx	lr

080005ea <_lseek>:
 80005ea:	b480      	push	{r7}
 80005ec:	b085      	sub	sp, #20
 80005ee:	af00      	add	r7, sp, #0
 80005f0:	60f8      	str	r0, [r7, #12]
 80005f2:	60b9      	str	r1, [r7, #8]
 80005f4:	607a      	str	r2, [r7, #4]
 80005f6:	2300      	movs	r3, #0
 80005f8:	4618      	mov	r0, r3
 80005fa:	3714      	adds	r7, #20
 80005fc:	46bd      	mov	sp, r7
 80005fe:	bc80      	pop	{r7}
 8000600:	4770      	bx	lr
	...

08000604 <_sbrk>:
 8000604:	b580      	push	{r7, lr}
 8000606:	b086      	sub	sp, #24
 8000608:	af00      	add	r7, sp, #0
 800060a:	6078      	str	r0, [r7, #4]
 800060c:	4a14      	ldr	r2, [pc, #80]	@ (8000660 <_sbrk+0x5c>)
 800060e:	4b15      	ldr	r3, [pc, #84]	@ (8000664 <_sbrk+0x60>)
 8000610:	1ad3      	subs	r3, r2, r3
 8000612:	617b      	str	r3, [r7, #20]
 8000614:	697b      	ldr	r3, [r7, #20]
 8000616:	613b      	str	r3, [r7, #16]
 8000618:	4b13      	ldr	r3, [pc, #76]	@ (8000668 <_sbrk+0x64>)
 800061a:	681b      	ldr	r3, [r3, #0]
 800061c:	2b00      	cmp	r3, #0
 800061e:	d102      	bne.n	8000626 <_sbrk+0x22>
 8000620:	4b11      	ldr	r3, [pc, #68]	@ (8000668 <_sbrk+0x64>)
 8000622:	4a12      	ldr	r2, [pc, #72]	@ (800066c <_sbrk+0x68>)
 8000624:	601a      	str	r2, [r3, #0]
 8000626:	4b10      	ldr	r3, [pc, #64]	@ (8000668 <_sbrk+0x64>)
 8000628:	681a      	ldr	r2, [r3, #0]
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	4413      	add	r3, r2
 800062e:	693a      	ldr	r2, [r7, #16]
 8000630:	429a      	cmp	r2, r3
 8000632:	d207      	bcs.n	8000644 <_sbrk+0x40>
 8000634:	f000 f9c0 	bl	80009b8 <__errno>
 8000638:	4603      	mov	r3, r0
 800063a:	220c      	movs	r2, #12
 800063c:	601a      	str	r2, [r3, #0]
 800063e:	f04f 33ff 	mov.w	r3, #4294967295
 8000642:	e009      	b.n	8000658 <_sbrk+0x54>
 8000644:	4b08      	ldr	r3, [pc, #32]	@ (8000668 <_sbrk+0x64>)
 8000646:	681b      	ldr	r3, [r3, #0]
 8000648:	60fb      	str	r3, [r7, #12]
 800064a:	4b07      	ldr	r3, [pc, #28]	@ (8000668 <_sbrk+0x64>)
 800064c:	681a      	ldr	r2, [r3, #0]
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	4413      	add	r3, r2
 8000652:	4a05      	ldr	r2, [pc, #20]	@ (8000668 <_sbrk+0x64>)
 8000654:	6013      	str	r3, [r2, #0]
 8000656:	68fb      	ldr	r3, [r7, #12]
 8000658:	4618      	mov	r0, r3
 800065a:	3718      	adds	r7, #24
 800065c:	46bd      	mov	sp, r7
 800065e:	bd80      	pop	{r7, pc}
 8000660:	20005000 	.word	0x20005000
 8000664:	00000400 	.word	0x00000400
 8000668:	2000007c 	.word	0x2000007c
 800066c:	200001d0 	.word	0x200001d0

08000670 <SystemInit>:
 8000670:	b480      	push	{r7}
 8000672:	af00      	add	r7, sp, #0
 8000674:	bf00      	nop
 8000676:	46bd      	mov	sp, r7
 8000678:	bc80      	pop	{r7}
 800067a:	4770      	bx	lr

0800067c <Reset_Handler>:
 800067c:	f7ff fff8 	bl	8000670 <SystemInit>
 8000680:	480b      	ldr	r0, [pc, #44]	@ (80006b0 <LoopFillZerobss+0xe>)
 8000682:	490c      	ldr	r1, [pc, #48]	@ (80006b4 <LoopFillZerobss+0x12>)
 8000684:	4a0c      	ldr	r2, [pc, #48]	@ (80006b8 <LoopFillZerobss+0x16>)
 8000686:	2300      	movs	r3, #0
 8000688:	e002      	b.n	8000690 <LoopCopyDataInit>

0800068a <CopyDataInit>:
 800068a:	58d4      	ldr	r4, [r2, r3]
 800068c:	50c4      	str	r4, [r0, r3]
 800068e:	3304      	adds	r3, #4

08000690 <LoopCopyDataInit>:
 8000690:	18c4      	adds	r4, r0, r3
 8000692:	428c      	cmp	r4, r1
 8000694:	d3f9      	bcc.n	800068a <CopyDataInit>
 8000696:	4a09      	ldr	r2, [pc, #36]	@ (80006bc <LoopFillZerobss+0x1a>)
 8000698:	4c09      	ldr	r4, [pc, #36]	@ (80006c0 <LoopFillZerobss+0x1e>)
 800069a:	2300      	movs	r3, #0
 800069c:	e001      	b.n	80006a2 <LoopFillZerobss>

0800069e <FillZerobss>:
 800069e:	6013      	str	r3, [r2, #0]
 80006a0:	3204      	adds	r2, #4

080006a2 <LoopFillZerobss>:
 80006a2:	42a2      	cmp	r2, r4
 80006a4:	d3fb      	bcc.n	800069e <FillZerobss>
 80006a6:	f000 f98d 	bl	80009c4 <__libc_init_array>
 80006aa:	f7ff fed9 	bl	8000460 <main>
 80006ae:	4770      	bx	lr
 80006b0:	20000000 	.word	0x20000000
 80006b4:	20000060 	.word	0x20000060
 80006b8:	080015d0 	.word	0x080015d0
 80006bc:	20000060 	.word	0x20000060
 80006c0:	200001d0 	.word	0x200001d0

080006c4 <ADC1_2_IRQHandler>:
 80006c4:	e7fe      	b.n	80006c4 <ADC1_2_IRQHandler>
	...

080006c8 <HAL_IncTick>:
 80006c8:	b480      	push	{r7}
 80006ca:	af00      	add	r7, sp, #0
 80006cc:	4b05      	ldr	r3, [pc, #20]	@ (80006e4 <HAL_IncTick+0x1c>)
 80006ce:	781b      	ldrb	r3, [r3, #0]
 80006d0:	461a      	mov	r2, r3
 80006d2:	4b05      	ldr	r3, [pc, #20]	@ (80006e8 <HAL_IncTick+0x20>)
 80006d4:	681b      	ldr	r3, [r3, #0]
 80006d6:	4413      	add	r3, r2
 80006d8:	4a03      	ldr	r2, [pc, #12]	@ (80006e8 <HAL_IncTick+0x20>)
 80006da:	6013      	str	r3, [r2, #0]
 80006dc:	bf00      	nop
 80006de:	46bd      	mov	sp, r7
 80006e0:	bc80      	pop	{r7}
 80006e2:	4770      	bx	lr
 80006e4:	20000000 	.word	0x20000000
 80006e8:	20000080 	.word	0x20000080

080006ec <std>:
 80006ec:	2300      	movs	r3, #0
 80006ee:	b510      	push	{r4, lr}
 80006f0:	4604      	mov	r4, r0
 80006f2:	e9c0 3300 	strd	r3, r3, [r0]
 80006f6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80006fa:	6083      	str	r3, [r0, #8]
 80006fc:	8181      	strh	r1, [r0, #12]
 80006fe:	6643      	str	r3, [r0, #100]	@ 0x64
 8000700:	81c2      	strh	r2, [r0, #14]
 8000702:	6183      	str	r3, [r0, #24]
 8000704:	4619      	mov	r1, r3
 8000706:	2208      	movs	r2, #8
 8000708:	305c      	adds	r0, #92	@ 0x5c
 800070a:	f000 f906 	bl	800091a <memset>
 800070e:	4b0d      	ldr	r3, [pc, #52]	@ (8000744 <std+0x58>)
 8000710:	6224      	str	r4, [r4, #32]
 8000712:	6263      	str	r3, [r4, #36]	@ 0x24
 8000714:	4b0c      	ldr	r3, [pc, #48]	@ (8000748 <std+0x5c>)
 8000716:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000718:	4b0c      	ldr	r3, [pc, #48]	@ (800074c <std+0x60>)
 800071a:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800071c:	4b0c      	ldr	r3, [pc, #48]	@ (8000750 <std+0x64>)
 800071e:	6323      	str	r3, [r4, #48]	@ 0x30
 8000720:	4b0c      	ldr	r3, [pc, #48]	@ (8000754 <std+0x68>)
 8000722:	429c      	cmp	r4, r3
 8000724:	d006      	beq.n	8000734 <std+0x48>
 8000726:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800072a:	4294      	cmp	r4, r2
 800072c:	d002      	beq.n	8000734 <std+0x48>
 800072e:	33d0      	adds	r3, #208	@ 0xd0
 8000730:	429c      	cmp	r4, r3
 8000732:	d105      	bne.n	8000740 <std+0x54>
 8000734:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000738:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800073c:	f000 b966 	b.w	8000a0c <__retarget_lock_init_recursive>
 8000740:	bd10      	pop	{r4, pc}
 8000742:	bf00      	nop
 8000744:	08000895 	.word	0x08000895
 8000748:	080008b7 	.word	0x080008b7
 800074c:	080008ef 	.word	0x080008ef
 8000750:	08000913 	.word	0x08000913
 8000754:	20000084 	.word	0x20000084

08000758 <stdio_exit_handler>:
 8000758:	4a02      	ldr	r2, [pc, #8]	@ (8000764 <stdio_exit_handler+0xc>)
 800075a:	4903      	ldr	r1, [pc, #12]	@ (8000768 <stdio_exit_handler+0x10>)
 800075c:	4803      	ldr	r0, [pc, #12]	@ (800076c <stdio_exit_handler+0x14>)
 800075e:	f000 b869 	b.w	8000834 <_fwalk_sglue>
 8000762:	bf00      	nop
 8000764:	20000004 	.word	0x20000004
 8000768:	080012a1 	.word	0x080012a1
 800076c:	20000014 	.word	0x20000014

08000770 <cleanup_stdio>:
 8000770:	6841      	ldr	r1, [r0, #4]
 8000772:	4b0c      	ldr	r3, [pc, #48]	@ (80007a4 <cleanup_stdio+0x34>)
 8000774:	b510      	push	{r4, lr}
 8000776:	4299      	cmp	r1, r3
 8000778:	4604      	mov	r4, r0
 800077a:	d001      	beq.n	8000780 <cleanup_stdio+0x10>
 800077c:	f000 fd90 	bl	80012a0 <_fflush_r>
 8000780:	68a1      	ldr	r1, [r4, #8]
 8000782:	4b09      	ldr	r3, [pc, #36]	@ (80007a8 <cleanup_stdio+0x38>)
 8000784:	4299      	cmp	r1, r3
 8000786:	d002      	beq.n	800078e <cleanup_stdio+0x1e>
 8000788:	4620      	mov	r0, r4
 800078a:	f000 fd89 	bl	80012a0 <_fflush_r>
 800078e:	68e1      	ldr	r1, [r4, #12]
 8000790:	4b06      	ldr	r3, [pc, #24]	@ (80007ac <cleanup_stdio+0x3c>)
 8000792:	4299      	cmp	r1, r3
 8000794:	d004      	beq.n	80007a0 <cleanup_stdio+0x30>
 8000796:	4620      	mov	r0, r4
 8000798:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800079c:	f000 bd80 	b.w	80012a0 <_fflush_r>
 80007a0:	bd10      	pop	{r4, pc}
 80007a2:	bf00      	nop
 80007a4:	20000084 	.word	0x20000084
 80007a8:	200000ec 	.word	0x200000ec
 80007ac:	20000154 	.word	0x20000154

080007b0 <global_stdio_init.part.0>:
 80007b0:	b510      	push	{r4, lr}
 80007b2:	4b0b      	ldr	r3, [pc, #44]	@ (80007e0 <global_stdio_init.part.0+0x30>)
 80007b4:	4c0b      	ldr	r4, [pc, #44]	@ (80007e4 <global_stdio_init.part.0+0x34>)
 80007b6:	4a0c      	ldr	r2, [pc, #48]	@ (80007e8 <global_stdio_init.part.0+0x38>)
 80007b8:	4620      	mov	r0, r4
 80007ba:	601a      	str	r2, [r3, #0]
 80007bc:	2104      	movs	r1, #4
 80007be:	2200      	movs	r2, #0
 80007c0:	f7ff ff94 	bl	80006ec <std>
 80007c4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80007c8:	2201      	movs	r2, #1
 80007ca:	2109      	movs	r1, #9
 80007cc:	f7ff ff8e 	bl	80006ec <std>
 80007d0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80007d4:	2202      	movs	r2, #2
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007da:	2112      	movs	r1, #18
 80007dc:	f7ff bf86 	b.w	80006ec <std>
 80007e0:	200001bc 	.word	0x200001bc
 80007e4:	20000084 	.word	0x20000084
 80007e8:	08000759 	.word	0x08000759

080007ec <__sfp_lock_acquire>:
 80007ec:	4801      	ldr	r0, [pc, #4]	@ (80007f4 <__sfp_lock_acquire+0x8>)
 80007ee:	f000 b90e 	b.w	8000a0e <__retarget_lock_acquire_recursive>
 80007f2:	bf00      	nop
 80007f4:	200001c5 	.word	0x200001c5

080007f8 <__sfp_lock_release>:
 80007f8:	4801      	ldr	r0, [pc, #4]	@ (8000800 <__sfp_lock_release+0x8>)
 80007fa:	f000 b909 	b.w	8000a10 <__retarget_lock_release_recursive>
 80007fe:	bf00      	nop
 8000800:	200001c5 	.word	0x200001c5

08000804 <__sinit>:
 8000804:	b510      	push	{r4, lr}
 8000806:	4604      	mov	r4, r0
 8000808:	f7ff fff0 	bl	80007ec <__sfp_lock_acquire>
 800080c:	6a23      	ldr	r3, [r4, #32]
 800080e:	b11b      	cbz	r3, 8000818 <__sinit+0x14>
 8000810:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000814:	f7ff bff0 	b.w	80007f8 <__sfp_lock_release>
 8000818:	4b04      	ldr	r3, [pc, #16]	@ (800082c <__sinit+0x28>)
 800081a:	6223      	str	r3, [r4, #32]
 800081c:	4b04      	ldr	r3, [pc, #16]	@ (8000830 <__sinit+0x2c>)
 800081e:	681b      	ldr	r3, [r3, #0]
 8000820:	2b00      	cmp	r3, #0
 8000822:	d1f5      	bne.n	8000810 <__sinit+0xc>
 8000824:	f7ff ffc4 	bl	80007b0 <global_stdio_init.part.0>
 8000828:	e7f2      	b.n	8000810 <__sinit+0xc>
 800082a:	bf00      	nop
 800082c:	08000771 	.word	0x08000771
 8000830:	200001bc 	.word	0x200001bc

08000834 <_fwalk_sglue>:
 8000834:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000838:	4607      	mov	r7, r0
 800083a:	4688      	mov	r8, r1
 800083c:	4614      	mov	r4, r2
 800083e:	2600      	movs	r6, #0
 8000840:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000844:	f1b9 0901 	subs.w	r9, r9, #1
 8000848:	d505      	bpl.n	8000856 <_fwalk_sglue+0x22>
 800084a:	6824      	ldr	r4, [r4, #0]
 800084c:	2c00      	cmp	r4, #0
 800084e:	d1f7      	bne.n	8000840 <_fwalk_sglue+0xc>
 8000850:	4630      	mov	r0, r6
 8000852:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000856:	89ab      	ldrh	r3, [r5, #12]
 8000858:	2b01      	cmp	r3, #1
 800085a:	d907      	bls.n	800086c <_fwalk_sglue+0x38>
 800085c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000860:	3301      	adds	r3, #1
 8000862:	d003      	beq.n	800086c <_fwalk_sglue+0x38>
 8000864:	4629      	mov	r1, r5
 8000866:	4638      	mov	r0, r7
 8000868:	47c0      	blx	r8
 800086a:	4306      	orrs	r6, r0
 800086c:	3568      	adds	r5, #104	@ 0x68
 800086e:	e7e9      	b.n	8000844 <_fwalk_sglue+0x10>

08000870 <iprintf>:
 8000870:	b40f      	push	{r0, r1, r2, r3}
 8000872:	b507      	push	{r0, r1, r2, lr}
 8000874:	4906      	ldr	r1, [pc, #24]	@ (8000890 <iprintf+0x20>)
 8000876:	ab04      	add	r3, sp, #16
 8000878:	6808      	ldr	r0, [r1, #0]
 800087a:	f853 2b04 	ldr.w	r2, [r3], #4
 800087e:	6881      	ldr	r1, [r0, #8]
 8000880:	9301      	str	r3, [sp, #4]
 8000882:	f000 f9e5 	bl	8000c50 <_vfiprintf_r>
 8000886:	b003      	add	sp, #12
 8000888:	f85d eb04 	ldr.w	lr, [sp], #4
 800088c:	b004      	add	sp, #16
 800088e:	4770      	bx	lr
 8000890:	20000010 	.word	0x20000010

08000894 <__sread>:
 8000894:	b510      	push	{r4, lr}
 8000896:	460c      	mov	r4, r1
 8000898:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800089c:	f000 f868 	bl	8000970 <_read_r>
 80008a0:	2800      	cmp	r0, #0
 80008a2:	bfab      	itete	ge
 80008a4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80008a6:	89a3      	ldrhlt	r3, [r4, #12]
 80008a8:	181b      	addge	r3, r3, r0
 80008aa:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80008ae:	bfac      	ite	ge
 80008b0:	6563      	strge	r3, [r4, #84]	@ 0x54
 80008b2:	81a3      	strhlt	r3, [r4, #12]
 80008b4:	bd10      	pop	{r4, pc}

080008b6 <__swrite>:
 80008b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80008ba:	461f      	mov	r7, r3
 80008bc:	898b      	ldrh	r3, [r1, #12]
 80008be:	4605      	mov	r5, r0
 80008c0:	05db      	lsls	r3, r3, #23
 80008c2:	460c      	mov	r4, r1
 80008c4:	4616      	mov	r6, r2
 80008c6:	d505      	bpl.n	80008d4 <__swrite+0x1e>
 80008c8:	2302      	movs	r3, #2
 80008ca:	2200      	movs	r2, #0
 80008cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80008d0:	f000 f83c 	bl	800094c <_lseek_r>
 80008d4:	89a3      	ldrh	r3, [r4, #12]
 80008d6:	4632      	mov	r2, r6
 80008d8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80008dc:	81a3      	strh	r3, [r4, #12]
 80008de:	4628      	mov	r0, r5
 80008e0:	463b      	mov	r3, r7
 80008e2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80008e6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80008ea:	f000 b853 	b.w	8000994 <_write_r>

080008ee <__sseek>:
 80008ee:	b510      	push	{r4, lr}
 80008f0:	460c      	mov	r4, r1
 80008f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80008f6:	f000 f829 	bl	800094c <_lseek_r>
 80008fa:	1c43      	adds	r3, r0, #1
 80008fc:	89a3      	ldrh	r3, [r4, #12]
 80008fe:	bf15      	itete	ne
 8000900:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000902:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000906:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800090a:	81a3      	strheq	r3, [r4, #12]
 800090c:	bf18      	it	ne
 800090e:	81a3      	strhne	r3, [r4, #12]
 8000910:	bd10      	pop	{r4, pc}

08000912 <__sclose>:
 8000912:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000916:	f000 b809 	b.w	800092c <_close_r>

0800091a <memset>:
 800091a:	4603      	mov	r3, r0
 800091c:	4402      	add	r2, r0
 800091e:	4293      	cmp	r3, r2
 8000920:	d100      	bne.n	8000924 <memset+0xa>
 8000922:	4770      	bx	lr
 8000924:	f803 1b01 	strb.w	r1, [r3], #1
 8000928:	e7f9      	b.n	800091e <memset+0x4>
	...

0800092c <_close_r>:
 800092c:	b538      	push	{r3, r4, r5, lr}
 800092e:	2300      	movs	r3, #0
 8000930:	4d05      	ldr	r5, [pc, #20]	@ (8000948 <_close_r+0x1c>)
 8000932:	4604      	mov	r4, r0
 8000934:	4608      	mov	r0, r1
 8000936:	602b      	str	r3, [r5, #0]
 8000938:	f7ff fe33 	bl	80005a2 <_close>
 800093c:	1c43      	adds	r3, r0, #1
 800093e:	d102      	bne.n	8000946 <_close_r+0x1a>
 8000940:	682b      	ldr	r3, [r5, #0]
 8000942:	b103      	cbz	r3, 8000946 <_close_r+0x1a>
 8000944:	6023      	str	r3, [r4, #0]
 8000946:	bd38      	pop	{r3, r4, r5, pc}
 8000948:	200001c0 	.word	0x200001c0

0800094c <_lseek_r>:
 800094c:	b538      	push	{r3, r4, r5, lr}
 800094e:	4604      	mov	r4, r0
 8000950:	4608      	mov	r0, r1
 8000952:	4611      	mov	r1, r2
 8000954:	2200      	movs	r2, #0
 8000956:	4d05      	ldr	r5, [pc, #20]	@ (800096c <_lseek_r+0x20>)
 8000958:	602a      	str	r2, [r5, #0]
 800095a:	461a      	mov	r2, r3
 800095c:	f7ff fe45 	bl	80005ea <_lseek>
 8000960:	1c43      	adds	r3, r0, #1
 8000962:	d102      	bne.n	800096a <_lseek_r+0x1e>
 8000964:	682b      	ldr	r3, [r5, #0]
 8000966:	b103      	cbz	r3, 800096a <_lseek_r+0x1e>
 8000968:	6023      	str	r3, [r4, #0]
 800096a:	bd38      	pop	{r3, r4, r5, pc}
 800096c:	200001c0 	.word	0x200001c0

08000970 <_read_r>:
 8000970:	b538      	push	{r3, r4, r5, lr}
 8000972:	4604      	mov	r4, r0
 8000974:	4608      	mov	r0, r1
 8000976:	4611      	mov	r1, r2
 8000978:	2200      	movs	r2, #0
 800097a:	4d05      	ldr	r5, [pc, #20]	@ (8000990 <_read_r+0x20>)
 800097c:	602a      	str	r2, [r5, #0]
 800097e:	461a      	mov	r2, r3
 8000980:	f7ff fdd6 	bl	8000530 <_read>
 8000984:	1c43      	adds	r3, r0, #1
 8000986:	d102      	bne.n	800098e <_read_r+0x1e>
 8000988:	682b      	ldr	r3, [r5, #0]
 800098a:	b103      	cbz	r3, 800098e <_read_r+0x1e>
 800098c:	6023      	str	r3, [r4, #0]
 800098e:	bd38      	pop	{r3, r4, r5, pc}
 8000990:	200001c0 	.word	0x200001c0

08000994 <_write_r>:
 8000994:	b538      	push	{r3, r4, r5, lr}
 8000996:	4604      	mov	r4, r0
 8000998:	4608      	mov	r0, r1
 800099a:	4611      	mov	r1, r2
 800099c:	2200      	movs	r2, #0
 800099e:	4d05      	ldr	r5, [pc, #20]	@ (80009b4 <_write_r+0x20>)
 80009a0:	602a      	str	r2, [r5, #0]
 80009a2:	461a      	mov	r2, r3
 80009a4:	f7ff fde1 	bl	800056a <_write>
 80009a8:	1c43      	adds	r3, r0, #1
 80009aa:	d102      	bne.n	80009b2 <_write_r+0x1e>
 80009ac:	682b      	ldr	r3, [r5, #0]
 80009ae:	b103      	cbz	r3, 80009b2 <_write_r+0x1e>
 80009b0:	6023      	str	r3, [r4, #0]
 80009b2:	bd38      	pop	{r3, r4, r5, pc}
 80009b4:	200001c0 	.word	0x200001c0

080009b8 <__errno>:
 80009b8:	4b01      	ldr	r3, [pc, #4]	@ (80009c0 <__errno+0x8>)
 80009ba:	6818      	ldr	r0, [r3, #0]
 80009bc:	4770      	bx	lr
 80009be:	bf00      	nop
 80009c0:	20000010 	.word	0x20000010

080009c4 <__libc_init_array>:
 80009c4:	b570      	push	{r4, r5, r6, lr}
 80009c6:	2600      	movs	r6, #0
 80009c8:	4d0c      	ldr	r5, [pc, #48]	@ (80009fc <__libc_init_array+0x38>)
 80009ca:	4c0d      	ldr	r4, [pc, #52]	@ (8000a00 <__libc_init_array+0x3c>)
 80009cc:	1b64      	subs	r4, r4, r5
 80009ce:	10a4      	asrs	r4, r4, #2
 80009d0:	42a6      	cmp	r6, r4
 80009d2:	d109      	bne.n	80009e8 <__libc_init_array+0x24>
 80009d4:	f000 fdc2 	bl	800155c <_init>
 80009d8:	2600      	movs	r6, #0
 80009da:	4d0a      	ldr	r5, [pc, #40]	@ (8000a04 <__libc_init_array+0x40>)
 80009dc:	4c0a      	ldr	r4, [pc, #40]	@ (8000a08 <__libc_init_array+0x44>)
 80009de:	1b64      	subs	r4, r4, r5
 80009e0:	10a4      	asrs	r4, r4, #2
 80009e2:	42a6      	cmp	r6, r4
 80009e4:	d105      	bne.n	80009f2 <__libc_init_array+0x2e>
 80009e6:	bd70      	pop	{r4, r5, r6, pc}
 80009e8:	f855 3b04 	ldr.w	r3, [r5], #4
 80009ec:	4798      	blx	r3
 80009ee:	3601      	adds	r6, #1
 80009f0:	e7ee      	b.n	80009d0 <__libc_init_array+0xc>
 80009f2:	f855 3b04 	ldr.w	r3, [r5], #4
 80009f6:	4798      	blx	r3
 80009f8:	3601      	adds	r6, #1
 80009fa:	e7f2      	b.n	80009e2 <__libc_init_array+0x1e>
 80009fc:	080015c8 	.word	0x080015c8
 8000a00:	080015c8 	.word	0x080015c8
 8000a04:	080015c8 	.word	0x080015c8
 8000a08:	080015cc 	.word	0x080015cc

08000a0c <__retarget_lock_init_recursive>:
 8000a0c:	4770      	bx	lr

08000a0e <__retarget_lock_acquire_recursive>:
 8000a0e:	4770      	bx	lr

08000a10 <__retarget_lock_release_recursive>:
 8000a10:	4770      	bx	lr
	...

08000a14 <_free_r>:
 8000a14:	b538      	push	{r3, r4, r5, lr}
 8000a16:	4605      	mov	r5, r0
 8000a18:	2900      	cmp	r1, #0
 8000a1a:	d040      	beq.n	8000a9e <_free_r+0x8a>
 8000a1c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a20:	1f0c      	subs	r4, r1, #4
 8000a22:	2b00      	cmp	r3, #0
 8000a24:	bfb8      	it	lt
 8000a26:	18e4      	addlt	r4, r4, r3
 8000a28:	f000 f8de 	bl	8000be8 <__malloc_lock>
 8000a2c:	4a1c      	ldr	r2, [pc, #112]	@ (8000aa0 <_free_r+0x8c>)
 8000a2e:	6813      	ldr	r3, [r2, #0]
 8000a30:	b933      	cbnz	r3, 8000a40 <_free_r+0x2c>
 8000a32:	6063      	str	r3, [r4, #4]
 8000a34:	6014      	str	r4, [r2, #0]
 8000a36:	4628      	mov	r0, r5
 8000a38:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a3c:	f000 b8da 	b.w	8000bf4 <__malloc_unlock>
 8000a40:	42a3      	cmp	r3, r4
 8000a42:	d908      	bls.n	8000a56 <_free_r+0x42>
 8000a44:	6820      	ldr	r0, [r4, #0]
 8000a46:	1821      	adds	r1, r4, r0
 8000a48:	428b      	cmp	r3, r1
 8000a4a:	bf01      	itttt	eq
 8000a4c:	6819      	ldreq	r1, [r3, #0]
 8000a4e:	685b      	ldreq	r3, [r3, #4]
 8000a50:	1809      	addeq	r1, r1, r0
 8000a52:	6021      	streq	r1, [r4, #0]
 8000a54:	e7ed      	b.n	8000a32 <_free_r+0x1e>
 8000a56:	461a      	mov	r2, r3
 8000a58:	685b      	ldr	r3, [r3, #4]
 8000a5a:	b10b      	cbz	r3, 8000a60 <_free_r+0x4c>
 8000a5c:	42a3      	cmp	r3, r4
 8000a5e:	d9fa      	bls.n	8000a56 <_free_r+0x42>
 8000a60:	6811      	ldr	r1, [r2, #0]
 8000a62:	1850      	adds	r0, r2, r1
 8000a64:	42a0      	cmp	r0, r4
 8000a66:	d10b      	bne.n	8000a80 <_free_r+0x6c>
 8000a68:	6820      	ldr	r0, [r4, #0]
 8000a6a:	4401      	add	r1, r0
 8000a6c:	1850      	adds	r0, r2, r1
 8000a6e:	4283      	cmp	r3, r0
 8000a70:	6011      	str	r1, [r2, #0]
 8000a72:	d1e0      	bne.n	8000a36 <_free_r+0x22>
 8000a74:	6818      	ldr	r0, [r3, #0]
 8000a76:	685b      	ldr	r3, [r3, #4]
 8000a78:	4408      	add	r0, r1
 8000a7a:	6010      	str	r0, [r2, #0]
 8000a7c:	6053      	str	r3, [r2, #4]
 8000a7e:	e7da      	b.n	8000a36 <_free_r+0x22>
 8000a80:	d902      	bls.n	8000a88 <_free_r+0x74>
 8000a82:	230c      	movs	r3, #12
 8000a84:	602b      	str	r3, [r5, #0]
 8000a86:	e7d6      	b.n	8000a36 <_free_r+0x22>
 8000a88:	6820      	ldr	r0, [r4, #0]
 8000a8a:	1821      	adds	r1, r4, r0
 8000a8c:	428b      	cmp	r3, r1
 8000a8e:	bf01      	itttt	eq
 8000a90:	6819      	ldreq	r1, [r3, #0]
 8000a92:	685b      	ldreq	r3, [r3, #4]
 8000a94:	1809      	addeq	r1, r1, r0
 8000a96:	6021      	streq	r1, [r4, #0]
 8000a98:	6063      	str	r3, [r4, #4]
 8000a9a:	6054      	str	r4, [r2, #4]
 8000a9c:	e7cb      	b.n	8000a36 <_free_r+0x22>
 8000a9e:	bd38      	pop	{r3, r4, r5, pc}
 8000aa0:	200001cc 	.word	0x200001cc

08000aa4 <sbrk_aligned>:
 8000aa4:	b570      	push	{r4, r5, r6, lr}
 8000aa6:	4e0f      	ldr	r6, [pc, #60]	@ (8000ae4 <sbrk_aligned+0x40>)
 8000aa8:	460c      	mov	r4, r1
 8000aaa:	6831      	ldr	r1, [r6, #0]
 8000aac:	4605      	mov	r5, r0
 8000aae:	b911      	cbnz	r1, 8000ab6 <sbrk_aligned+0x12>
 8000ab0:	f000 fcb2 	bl	8001418 <_sbrk_r>
 8000ab4:	6030      	str	r0, [r6, #0]
 8000ab6:	4621      	mov	r1, r4
 8000ab8:	4628      	mov	r0, r5
 8000aba:	f000 fcad 	bl	8001418 <_sbrk_r>
 8000abe:	1c43      	adds	r3, r0, #1
 8000ac0:	d103      	bne.n	8000aca <sbrk_aligned+0x26>
 8000ac2:	f04f 34ff 	mov.w	r4, #4294967295
 8000ac6:	4620      	mov	r0, r4
 8000ac8:	bd70      	pop	{r4, r5, r6, pc}
 8000aca:	1cc4      	adds	r4, r0, #3
 8000acc:	f024 0403 	bic.w	r4, r4, #3
 8000ad0:	42a0      	cmp	r0, r4
 8000ad2:	d0f8      	beq.n	8000ac6 <sbrk_aligned+0x22>
 8000ad4:	1a21      	subs	r1, r4, r0
 8000ad6:	4628      	mov	r0, r5
 8000ad8:	f000 fc9e 	bl	8001418 <_sbrk_r>
 8000adc:	3001      	adds	r0, #1
 8000ade:	d1f2      	bne.n	8000ac6 <sbrk_aligned+0x22>
 8000ae0:	e7ef      	b.n	8000ac2 <sbrk_aligned+0x1e>
 8000ae2:	bf00      	nop
 8000ae4:	200001c8 	.word	0x200001c8

08000ae8 <_malloc_r>:
 8000ae8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000aec:	1ccd      	adds	r5, r1, #3
 8000aee:	f025 0503 	bic.w	r5, r5, #3
 8000af2:	3508      	adds	r5, #8
 8000af4:	2d0c      	cmp	r5, #12
 8000af6:	bf38      	it	cc
 8000af8:	250c      	movcc	r5, #12
 8000afa:	2d00      	cmp	r5, #0
 8000afc:	4606      	mov	r6, r0
 8000afe:	db01      	blt.n	8000b04 <_malloc_r+0x1c>
 8000b00:	42a9      	cmp	r1, r5
 8000b02:	d904      	bls.n	8000b0e <_malloc_r+0x26>
 8000b04:	230c      	movs	r3, #12
 8000b06:	6033      	str	r3, [r6, #0]
 8000b08:	2000      	movs	r0, #0
 8000b0a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b0e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000be4 <_malloc_r+0xfc>
 8000b12:	f000 f869 	bl	8000be8 <__malloc_lock>
 8000b16:	f8d8 3000 	ldr.w	r3, [r8]
 8000b1a:	461c      	mov	r4, r3
 8000b1c:	bb44      	cbnz	r4, 8000b70 <_malloc_r+0x88>
 8000b1e:	4629      	mov	r1, r5
 8000b20:	4630      	mov	r0, r6
 8000b22:	f7ff ffbf 	bl	8000aa4 <sbrk_aligned>
 8000b26:	1c43      	adds	r3, r0, #1
 8000b28:	4604      	mov	r4, r0
 8000b2a:	d158      	bne.n	8000bde <_malloc_r+0xf6>
 8000b2c:	f8d8 4000 	ldr.w	r4, [r8]
 8000b30:	4627      	mov	r7, r4
 8000b32:	2f00      	cmp	r7, #0
 8000b34:	d143      	bne.n	8000bbe <_malloc_r+0xd6>
 8000b36:	2c00      	cmp	r4, #0
 8000b38:	d04b      	beq.n	8000bd2 <_malloc_r+0xea>
 8000b3a:	6823      	ldr	r3, [r4, #0]
 8000b3c:	4639      	mov	r1, r7
 8000b3e:	4630      	mov	r0, r6
 8000b40:	eb04 0903 	add.w	r9, r4, r3
 8000b44:	f000 fc68 	bl	8001418 <_sbrk_r>
 8000b48:	4581      	cmp	r9, r0
 8000b4a:	d142      	bne.n	8000bd2 <_malloc_r+0xea>
 8000b4c:	6821      	ldr	r1, [r4, #0]
 8000b4e:	4630      	mov	r0, r6
 8000b50:	1a6d      	subs	r5, r5, r1
 8000b52:	4629      	mov	r1, r5
 8000b54:	f7ff ffa6 	bl	8000aa4 <sbrk_aligned>
 8000b58:	3001      	adds	r0, #1
 8000b5a:	d03a      	beq.n	8000bd2 <_malloc_r+0xea>
 8000b5c:	6823      	ldr	r3, [r4, #0]
 8000b5e:	442b      	add	r3, r5
 8000b60:	6023      	str	r3, [r4, #0]
 8000b62:	f8d8 3000 	ldr.w	r3, [r8]
 8000b66:	685a      	ldr	r2, [r3, #4]
 8000b68:	bb62      	cbnz	r2, 8000bc4 <_malloc_r+0xdc>
 8000b6a:	f8c8 7000 	str.w	r7, [r8]
 8000b6e:	e00f      	b.n	8000b90 <_malloc_r+0xa8>
 8000b70:	6822      	ldr	r2, [r4, #0]
 8000b72:	1b52      	subs	r2, r2, r5
 8000b74:	d420      	bmi.n	8000bb8 <_malloc_r+0xd0>
 8000b76:	2a0b      	cmp	r2, #11
 8000b78:	d917      	bls.n	8000baa <_malloc_r+0xc2>
 8000b7a:	1961      	adds	r1, r4, r5
 8000b7c:	42a3      	cmp	r3, r4
 8000b7e:	6025      	str	r5, [r4, #0]
 8000b80:	bf18      	it	ne
 8000b82:	6059      	strne	r1, [r3, #4]
 8000b84:	6863      	ldr	r3, [r4, #4]
 8000b86:	bf08      	it	eq
 8000b88:	f8c8 1000 	streq.w	r1, [r8]
 8000b8c:	5162      	str	r2, [r4, r5]
 8000b8e:	604b      	str	r3, [r1, #4]
 8000b90:	4630      	mov	r0, r6
 8000b92:	f000 f82f 	bl	8000bf4 <__malloc_unlock>
 8000b96:	f104 000b 	add.w	r0, r4, #11
 8000b9a:	1d23      	adds	r3, r4, #4
 8000b9c:	f020 0007 	bic.w	r0, r0, #7
 8000ba0:	1ac2      	subs	r2, r0, r3
 8000ba2:	bf1c      	itt	ne
 8000ba4:	1a1b      	subne	r3, r3, r0
 8000ba6:	50a3      	strne	r3, [r4, r2]
 8000ba8:	e7af      	b.n	8000b0a <_malloc_r+0x22>
 8000baa:	6862      	ldr	r2, [r4, #4]
 8000bac:	42a3      	cmp	r3, r4
 8000bae:	bf0c      	ite	eq
 8000bb0:	f8c8 2000 	streq.w	r2, [r8]
 8000bb4:	605a      	strne	r2, [r3, #4]
 8000bb6:	e7eb      	b.n	8000b90 <_malloc_r+0xa8>
 8000bb8:	4623      	mov	r3, r4
 8000bba:	6864      	ldr	r4, [r4, #4]
 8000bbc:	e7ae      	b.n	8000b1c <_malloc_r+0x34>
 8000bbe:	463c      	mov	r4, r7
 8000bc0:	687f      	ldr	r7, [r7, #4]
 8000bc2:	e7b6      	b.n	8000b32 <_malloc_r+0x4a>
 8000bc4:	461a      	mov	r2, r3
 8000bc6:	685b      	ldr	r3, [r3, #4]
 8000bc8:	42a3      	cmp	r3, r4
 8000bca:	d1fb      	bne.n	8000bc4 <_malloc_r+0xdc>
 8000bcc:	2300      	movs	r3, #0
 8000bce:	6053      	str	r3, [r2, #4]
 8000bd0:	e7de      	b.n	8000b90 <_malloc_r+0xa8>
 8000bd2:	230c      	movs	r3, #12
 8000bd4:	4630      	mov	r0, r6
 8000bd6:	6033      	str	r3, [r6, #0]
 8000bd8:	f000 f80c 	bl	8000bf4 <__malloc_unlock>
 8000bdc:	e794      	b.n	8000b08 <_malloc_r+0x20>
 8000bde:	6005      	str	r5, [r0, #0]
 8000be0:	e7d6      	b.n	8000b90 <_malloc_r+0xa8>
 8000be2:	bf00      	nop
 8000be4:	200001cc 	.word	0x200001cc

08000be8 <__malloc_lock>:
 8000be8:	4801      	ldr	r0, [pc, #4]	@ (8000bf0 <__malloc_lock+0x8>)
 8000bea:	f7ff bf10 	b.w	8000a0e <__retarget_lock_acquire_recursive>
 8000bee:	bf00      	nop
 8000bf0:	200001c4 	.word	0x200001c4

08000bf4 <__malloc_unlock>:
 8000bf4:	4801      	ldr	r0, [pc, #4]	@ (8000bfc <__malloc_unlock+0x8>)
 8000bf6:	f7ff bf0b 	b.w	8000a10 <__retarget_lock_release_recursive>
 8000bfa:	bf00      	nop
 8000bfc:	200001c4 	.word	0x200001c4

08000c00 <__sfputc_r>:
 8000c00:	6893      	ldr	r3, [r2, #8]
 8000c02:	b410      	push	{r4}
 8000c04:	3b01      	subs	r3, #1
 8000c06:	2b00      	cmp	r3, #0
 8000c08:	6093      	str	r3, [r2, #8]
 8000c0a:	da07      	bge.n	8000c1c <__sfputc_r+0x1c>
 8000c0c:	6994      	ldr	r4, [r2, #24]
 8000c0e:	42a3      	cmp	r3, r4
 8000c10:	db01      	blt.n	8000c16 <__sfputc_r+0x16>
 8000c12:	290a      	cmp	r1, #10
 8000c14:	d102      	bne.n	8000c1c <__sfputc_r+0x1c>
 8000c16:	bc10      	pop	{r4}
 8000c18:	f000 bb6a 	b.w	80012f0 <__swbuf_r>
 8000c1c:	6813      	ldr	r3, [r2, #0]
 8000c1e:	1c58      	adds	r0, r3, #1
 8000c20:	6010      	str	r0, [r2, #0]
 8000c22:	7019      	strb	r1, [r3, #0]
 8000c24:	4608      	mov	r0, r1
 8000c26:	bc10      	pop	{r4}
 8000c28:	4770      	bx	lr

08000c2a <__sfputs_r>:
 8000c2a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c2c:	4606      	mov	r6, r0
 8000c2e:	460f      	mov	r7, r1
 8000c30:	4614      	mov	r4, r2
 8000c32:	18d5      	adds	r5, r2, r3
 8000c34:	42ac      	cmp	r4, r5
 8000c36:	d101      	bne.n	8000c3c <__sfputs_r+0x12>
 8000c38:	2000      	movs	r0, #0
 8000c3a:	e007      	b.n	8000c4c <__sfputs_r+0x22>
 8000c3c:	463a      	mov	r2, r7
 8000c3e:	4630      	mov	r0, r6
 8000c40:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c44:	f7ff ffdc 	bl	8000c00 <__sfputc_r>
 8000c48:	1c43      	adds	r3, r0, #1
 8000c4a:	d1f3      	bne.n	8000c34 <__sfputs_r+0xa>
 8000c4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000c50 <_vfiprintf_r>:
 8000c50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000c54:	460d      	mov	r5, r1
 8000c56:	4614      	mov	r4, r2
 8000c58:	4698      	mov	r8, r3
 8000c5a:	4606      	mov	r6, r0
 8000c5c:	b09d      	sub	sp, #116	@ 0x74
 8000c5e:	b118      	cbz	r0, 8000c68 <_vfiprintf_r+0x18>
 8000c60:	6a03      	ldr	r3, [r0, #32]
 8000c62:	b90b      	cbnz	r3, 8000c68 <_vfiprintf_r+0x18>
 8000c64:	f7ff fdce 	bl	8000804 <__sinit>
 8000c68:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c6a:	07d9      	lsls	r1, r3, #31
 8000c6c:	d405      	bmi.n	8000c7a <_vfiprintf_r+0x2a>
 8000c6e:	89ab      	ldrh	r3, [r5, #12]
 8000c70:	059a      	lsls	r2, r3, #22
 8000c72:	d402      	bmi.n	8000c7a <_vfiprintf_r+0x2a>
 8000c74:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c76:	f7ff feca 	bl	8000a0e <__retarget_lock_acquire_recursive>
 8000c7a:	89ab      	ldrh	r3, [r5, #12]
 8000c7c:	071b      	lsls	r3, r3, #28
 8000c7e:	d501      	bpl.n	8000c84 <_vfiprintf_r+0x34>
 8000c80:	692b      	ldr	r3, [r5, #16]
 8000c82:	b99b      	cbnz	r3, 8000cac <_vfiprintf_r+0x5c>
 8000c84:	4629      	mov	r1, r5
 8000c86:	4630      	mov	r0, r6
 8000c88:	f000 fb70 	bl	800136c <__swsetup_r>
 8000c8c:	b170      	cbz	r0, 8000cac <_vfiprintf_r+0x5c>
 8000c8e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c90:	07dc      	lsls	r4, r3, #31
 8000c92:	d504      	bpl.n	8000c9e <_vfiprintf_r+0x4e>
 8000c94:	f04f 30ff 	mov.w	r0, #4294967295
 8000c98:	b01d      	add	sp, #116	@ 0x74
 8000c9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000c9e:	89ab      	ldrh	r3, [r5, #12]
 8000ca0:	0598      	lsls	r0, r3, #22
 8000ca2:	d4f7      	bmi.n	8000c94 <_vfiprintf_r+0x44>
 8000ca4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000ca6:	f7ff feb3 	bl	8000a10 <__retarget_lock_release_recursive>
 8000caa:	e7f3      	b.n	8000c94 <_vfiprintf_r+0x44>
 8000cac:	2300      	movs	r3, #0
 8000cae:	9309      	str	r3, [sp, #36]	@ 0x24
 8000cb0:	2320      	movs	r3, #32
 8000cb2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000cb6:	2330      	movs	r3, #48	@ 0x30
 8000cb8:	f04f 0901 	mov.w	r9, #1
 8000cbc:	f8cd 800c 	str.w	r8, [sp, #12]
 8000cc0:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8000e6c <_vfiprintf_r+0x21c>
 8000cc4:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000cc8:	4623      	mov	r3, r4
 8000cca:	469a      	mov	sl, r3
 8000ccc:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000cd0:	b10a      	cbz	r2, 8000cd6 <_vfiprintf_r+0x86>
 8000cd2:	2a25      	cmp	r2, #37	@ 0x25
 8000cd4:	d1f9      	bne.n	8000cca <_vfiprintf_r+0x7a>
 8000cd6:	ebba 0b04 	subs.w	fp, sl, r4
 8000cda:	d00b      	beq.n	8000cf4 <_vfiprintf_r+0xa4>
 8000cdc:	465b      	mov	r3, fp
 8000cde:	4622      	mov	r2, r4
 8000ce0:	4629      	mov	r1, r5
 8000ce2:	4630      	mov	r0, r6
 8000ce4:	f7ff ffa1 	bl	8000c2a <__sfputs_r>
 8000ce8:	3001      	adds	r0, #1
 8000cea:	f000 80a7 	beq.w	8000e3c <_vfiprintf_r+0x1ec>
 8000cee:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000cf0:	445a      	add	r2, fp
 8000cf2:	9209      	str	r2, [sp, #36]	@ 0x24
 8000cf4:	f89a 3000 	ldrb.w	r3, [sl]
 8000cf8:	2b00      	cmp	r3, #0
 8000cfa:	f000 809f 	beq.w	8000e3c <_vfiprintf_r+0x1ec>
 8000cfe:	2300      	movs	r3, #0
 8000d00:	f04f 32ff 	mov.w	r2, #4294967295
 8000d04:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d08:	f10a 0a01 	add.w	sl, sl, #1
 8000d0c:	9304      	str	r3, [sp, #16]
 8000d0e:	9307      	str	r3, [sp, #28]
 8000d10:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000d14:	931a      	str	r3, [sp, #104]	@ 0x68
 8000d16:	4654      	mov	r4, sl
 8000d18:	2205      	movs	r2, #5
 8000d1a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d1e:	4853      	ldr	r0, [pc, #332]	@ (8000e6c <_vfiprintf_r+0x21c>)
 8000d20:	f000 fb8a 	bl	8001438 <memchr>
 8000d24:	9a04      	ldr	r2, [sp, #16]
 8000d26:	b9d8      	cbnz	r0, 8000d60 <_vfiprintf_r+0x110>
 8000d28:	06d1      	lsls	r1, r2, #27
 8000d2a:	bf44      	itt	mi
 8000d2c:	2320      	movmi	r3, #32
 8000d2e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000d32:	0713      	lsls	r3, r2, #28
 8000d34:	bf44      	itt	mi
 8000d36:	232b      	movmi	r3, #43	@ 0x2b
 8000d38:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000d3c:	f89a 3000 	ldrb.w	r3, [sl]
 8000d40:	2b2a      	cmp	r3, #42	@ 0x2a
 8000d42:	d015      	beq.n	8000d70 <_vfiprintf_r+0x120>
 8000d44:	4654      	mov	r4, sl
 8000d46:	2000      	movs	r0, #0
 8000d48:	f04f 0c0a 	mov.w	ip, #10
 8000d4c:	9a07      	ldr	r2, [sp, #28]
 8000d4e:	4621      	mov	r1, r4
 8000d50:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000d54:	3b30      	subs	r3, #48	@ 0x30
 8000d56:	2b09      	cmp	r3, #9
 8000d58:	d94b      	bls.n	8000df2 <_vfiprintf_r+0x1a2>
 8000d5a:	b1b0      	cbz	r0, 8000d8a <_vfiprintf_r+0x13a>
 8000d5c:	9207      	str	r2, [sp, #28]
 8000d5e:	e014      	b.n	8000d8a <_vfiprintf_r+0x13a>
 8000d60:	eba0 0308 	sub.w	r3, r0, r8
 8000d64:	fa09 f303 	lsl.w	r3, r9, r3
 8000d68:	4313      	orrs	r3, r2
 8000d6a:	46a2      	mov	sl, r4
 8000d6c:	9304      	str	r3, [sp, #16]
 8000d6e:	e7d2      	b.n	8000d16 <_vfiprintf_r+0xc6>
 8000d70:	9b03      	ldr	r3, [sp, #12]
 8000d72:	1d19      	adds	r1, r3, #4
 8000d74:	681b      	ldr	r3, [r3, #0]
 8000d76:	9103      	str	r1, [sp, #12]
 8000d78:	2b00      	cmp	r3, #0
 8000d7a:	bfbb      	ittet	lt
 8000d7c:	425b      	neglt	r3, r3
 8000d7e:	f042 0202 	orrlt.w	r2, r2, #2
 8000d82:	9307      	strge	r3, [sp, #28]
 8000d84:	9307      	strlt	r3, [sp, #28]
 8000d86:	bfb8      	it	lt
 8000d88:	9204      	strlt	r2, [sp, #16]
 8000d8a:	7823      	ldrb	r3, [r4, #0]
 8000d8c:	2b2e      	cmp	r3, #46	@ 0x2e
 8000d8e:	d10a      	bne.n	8000da6 <_vfiprintf_r+0x156>
 8000d90:	7863      	ldrb	r3, [r4, #1]
 8000d92:	2b2a      	cmp	r3, #42	@ 0x2a
 8000d94:	d132      	bne.n	8000dfc <_vfiprintf_r+0x1ac>
 8000d96:	9b03      	ldr	r3, [sp, #12]
 8000d98:	3402      	adds	r4, #2
 8000d9a:	1d1a      	adds	r2, r3, #4
 8000d9c:	681b      	ldr	r3, [r3, #0]
 8000d9e:	9203      	str	r2, [sp, #12]
 8000da0:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000da4:	9305      	str	r3, [sp, #20]
 8000da6:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000e70 <_vfiprintf_r+0x220>
 8000daa:	2203      	movs	r2, #3
 8000dac:	4650      	mov	r0, sl
 8000dae:	7821      	ldrb	r1, [r4, #0]
 8000db0:	f000 fb42 	bl	8001438 <memchr>
 8000db4:	b138      	cbz	r0, 8000dc6 <_vfiprintf_r+0x176>
 8000db6:	2240      	movs	r2, #64	@ 0x40
 8000db8:	9b04      	ldr	r3, [sp, #16]
 8000dba:	eba0 000a 	sub.w	r0, r0, sl
 8000dbe:	4082      	lsls	r2, r0
 8000dc0:	4313      	orrs	r3, r2
 8000dc2:	3401      	adds	r4, #1
 8000dc4:	9304      	str	r3, [sp, #16]
 8000dc6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000dca:	2206      	movs	r2, #6
 8000dcc:	4829      	ldr	r0, [pc, #164]	@ (8000e74 <_vfiprintf_r+0x224>)
 8000dce:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000dd2:	f000 fb31 	bl	8001438 <memchr>
 8000dd6:	2800      	cmp	r0, #0
 8000dd8:	d03f      	beq.n	8000e5a <_vfiprintf_r+0x20a>
 8000dda:	4b27      	ldr	r3, [pc, #156]	@ (8000e78 <_vfiprintf_r+0x228>)
 8000ddc:	bb1b      	cbnz	r3, 8000e26 <_vfiprintf_r+0x1d6>
 8000dde:	9b03      	ldr	r3, [sp, #12]
 8000de0:	3307      	adds	r3, #7
 8000de2:	f023 0307 	bic.w	r3, r3, #7
 8000de6:	3308      	adds	r3, #8
 8000de8:	9303      	str	r3, [sp, #12]
 8000dea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000dec:	443b      	add	r3, r7
 8000dee:	9309      	str	r3, [sp, #36]	@ 0x24
 8000df0:	e76a      	b.n	8000cc8 <_vfiprintf_r+0x78>
 8000df2:	460c      	mov	r4, r1
 8000df4:	2001      	movs	r0, #1
 8000df6:	fb0c 3202 	mla	r2, ip, r2, r3
 8000dfa:	e7a8      	b.n	8000d4e <_vfiprintf_r+0xfe>
 8000dfc:	2300      	movs	r3, #0
 8000dfe:	f04f 0c0a 	mov.w	ip, #10
 8000e02:	4619      	mov	r1, r3
 8000e04:	3401      	adds	r4, #1
 8000e06:	9305      	str	r3, [sp, #20]
 8000e08:	4620      	mov	r0, r4
 8000e0a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e0e:	3a30      	subs	r2, #48	@ 0x30
 8000e10:	2a09      	cmp	r2, #9
 8000e12:	d903      	bls.n	8000e1c <_vfiprintf_r+0x1cc>
 8000e14:	2b00      	cmp	r3, #0
 8000e16:	d0c6      	beq.n	8000da6 <_vfiprintf_r+0x156>
 8000e18:	9105      	str	r1, [sp, #20]
 8000e1a:	e7c4      	b.n	8000da6 <_vfiprintf_r+0x156>
 8000e1c:	4604      	mov	r4, r0
 8000e1e:	2301      	movs	r3, #1
 8000e20:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e24:	e7f0      	b.n	8000e08 <_vfiprintf_r+0x1b8>
 8000e26:	ab03      	add	r3, sp, #12
 8000e28:	9300      	str	r3, [sp, #0]
 8000e2a:	462a      	mov	r2, r5
 8000e2c:	4630      	mov	r0, r6
 8000e2e:	4b13      	ldr	r3, [pc, #76]	@ (8000e7c <_vfiprintf_r+0x22c>)
 8000e30:	a904      	add	r1, sp, #16
 8000e32:	f3af 8000 	nop.w
 8000e36:	4607      	mov	r7, r0
 8000e38:	1c78      	adds	r0, r7, #1
 8000e3a:	d1d6      	bne.n	8000dea <_vfiprintf_r+0x19a>
 8000e3c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000e3e:	07d9      	lsls	r1, r3, #31
 8000e40:	d405      	bmi.n	8000e4e <_vfiprintf_r+0x1fe>
 8000e42:	89ab      	ldrh	r3, [r5, #12]
 8000e44:	059a      	lsls	r2, r3, #22
 8000e46:	d402      	bmi.n	8000e4e <_vfiprintf_r+0x1fe>
 8000e48:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000e4a:	f7ff fde1 	bl	8000a10 <__retarget_lock_release_recursive>
 8000e4e:	89ab      	ldrh	r3, [r5, #12]
 8000e50:	065b      	lsls	r3, r3, #25
 8000e52:	f53f af1f 	bmi.w	8000c94 <_vfiprintf_r+0x44>
 8000e56:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000e58:	e71e      	b.n	8000c98 <_vfiprintf_r+0x48>
 8000e5a:	ab03      	add	r3, sp, #12
 8000e5c:	9300      	str	r3, [sp, #0]
 8000e5e:	462a      	mov	r2, r5
 8000e60:	4630      	mov	r0, r6
 8000e62:	4b06      	ldr	r3, [pc, #24]	@ (8000e7c <_vfiprintf_r+0x22c>)
 8000e64:	a904      	add	r1, sp, #16
 8000e66:	f000 f87d 	bl	8000f64 <_printf_i>
 8000e6a:	e7e4      	b.n	8000e36 <_vfiprintf_r+0x1e6>
 8000e6c:	08001593 	.word	0x08001593
 8000e70:	08001599 	.word	0x08001599
 8000e74:	0800159d 	.word	0x0800159d
 8000e78:	00000000 	.word	0x00000000
 8000e7c:	08000c2b 	.word	0x08000c2b

08000e80 <_printf_common>:
 8000e80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e84:	4616      	mov	r6, r2
 8000e86:	4698      	mov	r8, r3
 8000e88:	688a      	ldr	r2, [r1, #8]
 8000e8a:	690b      	ldr	r3, [r1, #16]
 8000e8c:	4607      	mov	r7, r0
 8000e8e:	4293      	cmp	r3, r2
 8000e90:	bfb8      	it	lt
 8000e92:	4613      	movlt	r3, r2
 8000e94:	6033      	str	r3, [r6, #0]
 8000e96:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000e9a:	460c      	mov	r4, r1
 8000e9c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000ea0:	b10a      	cbz	r2, 8000ea6 <_printf_common+0x26>
 8000ea2:	3301      	adds	r3, #1
 8000ea4:	6033      	str	r3, [r6, #0]
 8000ea6:	6823      	ldr	r3, [r4, #0]
 8000ea8:	0699      	lsls	r1, r3, #26
 8000eaa:	bf42      	ittt	mi
 8000eac:	6833      	ldrmi	r3, [r6, #0]
 8000eae:	3302      	addmi	r3, #2
 8000eb0:	6033      	strmi	r3, [r6, #0]
 8000eb2:	6825      	ldr	r5, [r4, #0]
 8000eb4:	f015 0506 	ands.w	r5, r5, #6
 8000eb8:	d106      	bne.n	8000ec8 <_printf_common+0x48>
 8000eba:	f104 0a19 	add.w	sl, r4, #25
 8000ebe:	68e3      	ldr	r3, [r4, #12]
 8000ec0:	6832      	ldr	r2, [r6, #0]
 8000ec2:	1a9b      	subs	r3, r3, r2
 8000ec4:	42ab      	cmp	r3, r5
 8000ec6:	dc2b      	bgt.n	8000f20 <_printf_common+0xa0>
 8000ec8:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000ecc:	6822      	ldr	r2, [r4, #0]
 8000ece:	3b00      	subs	r3, #0
 8000ed0:	bf18      	it	ne
 8000ed2:	2301      	movne	r3, #1
 8000ed4:	0692      	lsls	r2, r2, #26
 8000ed6:	d430      	bmi.n	8000f3a <_printf_common+0xba>
 8000ed8:	4641      	mov	r1, r8
 8000eda:	4638      	mov	r0, r7
 8000edc:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000ee0:	47c8      	blx	r9
 8000ee2:	3001      	adds	r0, #1
 8000ee4:	d023      	beq.n	8000f2e <_printf_common+0xae>
 8000ee6:	6823      	ldr	r3, [r4, #0]
 8000ee8:	6922      	ldr	r2, [r4, #16]
 8000eea:	f003 0306 	and.w	r3, r3, #6
 8000eee:	2b04      	cmp	r3, #4
 8000ef0:	bf14      	ite	ne
 8000ef2:	2500      	movne	r5, #0
 8000ef4:	6833      	ldreq	r3, [r6, #0]
 8000ef6:	f04f 0600 	mov.w	r6, #0
 8000efa:	bf08      	it	eq
 8000efc:	68e5      	ldreq	r5, [r4, #12]
 8000efe:	f104 041a 	add.w	r4, r4, #26
 8000f02:	bf08      	it	eq
 8000f04:	1aed      	subeq	r5, r5, r3
 8000f06:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8000f0a:	bf08      	it	eq
 8000f0c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f10:	4293      	cmp	r3, r2
 8000f12:	bfc4      	itt	gt
 8000f14:	1a9b      	subgt	r3, r3, r2
 8000f16:	18ed      	addgt	r5, r5, r3
 8000f18:	42b5      	cmp	r5, r6
 8000f1a:	d11a      	bne.n	8000f52 <_printf_common+0xd2>
 8000f1c:	2000      	movs	r0, #0
 8000f1e:	e008      	b.n	8000f32 <_printf_common+0xb2>
 8000f20:	2301      	movs	r3, #1
 8000f22:	4652      	mov	r2, sl
 8000f24:	4641      	mov	r1, r8
 8000f26:	4638      	mov	r0, r7
 8000f28:	47c8      	blx	r9
 8000f2a:	3001      	adds	r0, #1
 8000f2c:	d103      	bne.n	8000f36 <_printf_common+0xb6>
 8000f2e:	f04f 30ff 	mov.w	r0, #4294967295
 8000f32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f36:	3501      	adds	r5, #1
 8000f38:	e7c1      	b.n	8000ebe <_printf_common+0x3e>
 8000f3a:	2030      	movs	r0, #48	@ 0x30
 8000f3c:	18e1      	adds	r1, r4, r3
 8000f3e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000f42:	1c5a      	adds	r2, r3, #1
 8000f44:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000f48:	4422      	add	r2, r4
 8000f4a:	3302      	adds	r3, #2
 8000f4c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000f50:	e7c2      	b.n	8000ed8 <_printf_common+0x58>
 8000f52:	2301      	movs	r3, #1
 8000f54:	4622      	mov	r2, r4
 8000f56:	4641      	mov	r1, r8
 8000f58:	4638      	mov	r0, r7
 8000f5a:	47c8      	blx	r9
 8000f5c:	3001      	adds	r0, #1
 8000f5e:	d0e6      	beq.n	8000f2e <_printf_common+0xae>
 8000f60:	3601      	adds	r6, #1
 8000f62:	e7d9      	b.n	8000f18 <_printf_common+0x98>

08000f64 <_printf_i>:
 8000f64:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000f68:	7e0f      	ldrb	r7, [r1, #24]
 8000f6a:	4691      	mov	r9, r2
 8000f6c:	2f78      	cmp	r7, #120	@ 0x78
 8000f6e:	4680      	mov	r8, r0
 8000f70:	460c      	mov	r4, r1
 8000f72:	469a      	mov	sl, r3
 8000f74:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000f76:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000f7a:	d807      	bhi.n	8000f8c <_printf_i+0x28>
 8000f7c:	2f62      	cmp	r7, #98	@ 0x62
 8000f7e:	d80a      	bhi.n	8000f96 <_printf_i+0x32>
 8000f80:	2f00      	cmp	r7, #0
 8000f82:	f000 80d1 	beq.w	8001128 <_printf_i+0x1c4>
 8000f86:	2f58      	cmp	r7, #88	@ 0x58
 8000f88:	f000 80b8 	beq.w	80010fc <_printf_i+0x198>
 8000f8c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000f90:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000f94:	e03a      	b.n	800100c <_printf_i+0xa8>
 8000f96:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000f9a:	2b15      	cmp	r3, #21
 8000f9c:	d8f6      	bhi.n	8000f8c <_printf_i+0x28>
 8000f9e:	a101      	add	r1, pc, #4	@ (adr r1, 8000fa4 <_printf_i+0x40>)
 8000fa0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000fa4:	08000ffd 	.word	0x08000ffd
 8000fa8:	08001011 	.word	0x08001011
 8000fac:	08000f8d 	.word	0x08000f8d
 8000fb0:	08000f8d 	.word	0x08000f8d
 8000fb4:	08000f8d 	.word	0x08000f8d
 8000fb8:	08000f8d 	.word	0x08000f8d
 8000fbc:	08001011 	.word	0x08001011
 8000fc0:	08000f8d 	.word	0x08000f8d
 8000fc4:	08000f8d 	.word	0x08000f8d
 8000fc8:	08000f8d 	.word	0x08000f8d
 8000fcc:	08000f8d 	.word	0x08000f8d
 8000fd0:	0800110f 	.word	0x0800110f
 8000fd4:	0800103b 	.word	0x0800103b
 8000fd8:	080010c9 	.word	0x080010c9
 8000fdc:	08000f8d 	.word	0x08000f8d
 8000fe0:	08000f8d 	.word	0x08000f8d
 8000fe4:	08001131 	.word	0x08001131
 8000fe8:	08000f8d 	.word	0x08000f8d
 8000fec:	0800103b 	.word	0x0800103b
 8000ff0:	08000f8d 	.word	0x08000f8d
 8000ff4:	08000f8d 	.word	0x08000f8d
 8000ff8:	080010d1 	.word	0x080010d1
 8000ffc:	6833      	ldr	r3, [r6, #0]
 8000ffe:	1d1a      	adds	r2, r3, #4
 8001000:	681b      	ldr	r3, [r3, #0]
 8001002:	6032      	str	r2, [r6, #0]
 8001004:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001008:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800100c:	2301      	movs	r3, #1
 800100e:	e09c      	b.n	800114a <_printf_i+0x1e6>
 8001010:	6833      	ldr	r3, [r6, #0]
 8001012:	6820      	ldr	r0, [r4, #0]
 8001014:	1d19      	adds	r1, r3, #4
 8001016:	6031      	str	r1, [r6, #0]
 8001018:	0606      	lsls	r6, r0, #24
 800101a:	d501      	bpl.n	8001020 <_printf_i+0xbc>
 800101c:	681d      	ldr	r5, [r3, #0]
 800101e:	e003      	b.n	8001028 <_printf_i+0xc4>
 8001020:	0645      	lsls	r5, r0, #25
 8001022:	d5fb      	bpl.n	800101c <_printf_i+0xb8>
 8001024:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001028:	2d00      	cmp	r5, #0
 800102a:	da03      	bge.n	8001034 <_printf_i+0xd0>
 800102c:	232d      	movs	r3, #45	@ 0x2d
 800102e:	426d      	negs	r5, r5
 8001030:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001034:	230a      	movs	r3, #10
 8001036:	4858      	ldr	r0, [pc, #352]	@ (8001198 <_printf_i+0x234>)
 8001038:	e011      	b.n	800105e <_printf_i+0xfa>
 800103a:	6821      	ldr	r1, [r4, #0]
 800103c:	6833      	ldr	r3, [r6, #0]
 800103e:	0608      	lsls	r0, r1, #24
 8001040:	f853 5b04 	ldr.w	r5, [r3], #4
 8001044:	d402      	bmi.n	800104c <_printf_i+0xe8>
 8001046:	0649      	lsls	r1, r1, #25
 8001048:	bf48      	it	mi
 800104a:	b2ad      	uxthmi	r5, r5
 800104c:	2f6f      	cmp	r7, #111	@ 0x6f
 800104e:	6033      	str	r3, [r6, #0]
 8001050:	bf14      	ite	ne
 8001052:	230a      	movne	r3, #10
 8001054:	2308      	moveq	r3, #8
 8001056:	4850      	ldr	r0, [pc, #320]	@ (8001198 <_printf_i+0x234>)
 8001058:	2100      	movs	r1, #0
 800105a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800105e:	6866      	ldr	r6, [r4, #4]
 8001060:	2e00      	cmp	r6, #0
 8001062:	60a6      	str	r6, [r4, #8]
 8001064:	db05      	blt.n	8001072 <_printf_i+0x10e>
 8001066:	6821      	ldr	r1, [r4, #0]
 8001068:	432e      	orrs	r6, r5
 800106a:	f021 0104 	bic.w	r1, r1, #4
 800106e:	6021      	str	r1, [r4, #0]
 8001070:	d04b      	beq.n	800110a <_printf_i+0x1a6>
 8001072:	4616      	mov	r6, r2
 8001074:	fbb5 f1f3 	udiv	r1, r5, r3
 8001078:	fb03 5711 	mls	r7, r3, r1, r5
 800107c:	5dc7      	ldrb	r7, [r0, r7]
 800107e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001082:	462f      	mov	r7, r5
 8001084:	42bb      	cmp	r3, r7
 8001086:	460d      	mov	r5, r1
 8001088:	d9f4      	bls.n	8001074 <_printf_i+0x110>
 800108a:	2b08      	cmp	r3, #8
 800108c:	d10b      	bne.n	80010a6 <_printf_i+0x142>
 800108e:	6823      	ldr	r3, [r4, #0]
 8001090:	07df      	lsls	r7, r3, #31
 8001092:	d508      	bpl.n	80010a6 <_printf_i+0x142>
 8001094:	6923      	ldr	r3, [r4, #16]
 8001096:	6861      	ldr	r1, [r4, #4]
 8001098:	4299      	cmp	r1, r3
 800109a:	bfde      	ittt	le
 800109c:	2330      	movle	r3, #48	@ 0x30
 800109e:	f806 3c01 	strble.w	r3, [r6, #-1]
 80010a2:	f106 36ff 	addle.w	r6, r6, #4294967295
 80010a6:	1b92      	subs	r2, r2, r6
 80010a8:	6122      	str	r2, [r4, #16]
 80010aa:	464b      	mov	r3, r9
 80010ac:	4621      	mov	r1, r4
 80010ae:	4640      	mov	r0, r8
 80010b0:	f8cd a000 	str.w	sl, [sp]
 80010b4:	aa03      	add	r2, sp, #12
 80010b6:	f7ff fee3 	bl	8000e80 <_printf_common>
 80010ba:	3001      	adds	r0, #1
 80010bc:	d14a      	bne.n	8001154 <_printf_i+0x1f0>
 80010be:	f04f 30ff 	mov.w	r0, #4294967295
 80010c2:	b004      	add	sp, #16
 80010c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010c8:	6823      	ldr	r3, [r4, #0]
 80010ca:	f043 0320 	orr.w	r3, r3, #32
 80010ce:	6023      	str	r3, [r4, #0]
 80010d0:	2778      	movs	r7, #120	@ 0x78
 80010d2:	4832      	ldr	r0, [pc, #200]	@ (800119c <_printf_i+0x238>)
 80010d4:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80010d8:	6823      	ldr	r3, [r4, #0]
 80010da:	6831      	ldr	r1, [r6, #0]
 80010dc:	061f      	lsls	r7, r3, #24
 80010de:	f851 5b04 	ldr.w	r5, [r1], #4
 80010e2:	d402      	bmi.n	80010ea <_printf_i+0x186>
 80010e4:	065f      	lsls	r7, r3, #25
 80010e6:	bf48      	it	mi
 80010e8:	b2ad      	uxthmi	r5, r5
 80010ea:	6031      	str	r1, [r6, #0]
 80010ec:	07d9      	lsls	r1, r3, #31
 80010ee:	bf44      	itt	mi
 80010f0:	f043 0320 	orrmi.w	r3, r3, #32
 80010f4:	6023      	strmi	r3, [r4, #0]
 80010f6:	b11d      	cbz	r5, 8001100 <_printf_i+0x19c>
 80010f8:	2310      	movs	r3, #16
 80010fa:	e7ad      	b.n	8001058 <_printf_i+0xf4>
 80010fc:	4826      	ldr	r0, [pc, #152]	@ (8001198 <_printf_i+0x234>)
 80010fe:	e7e9      	b.n	80010d4 <_printf_i+0x170>
 8001100:	6823      	ldr	r3, [r4, #0]
 8001102:	f023 0320 	bic.w	r3, r3, #32
 8001106:	6023      	str	r3, [r4, #0]
 8001108:	e7f6      	b.n	80010f8 <_printf_i+0x194>
 800110a:	4616      	mov	r6, r2
 800110c:	e7bd      	b.n	800108a <_printf_i+0x126>
 800110e:	6833      	ldr	r3, [r6, #0]
 8001110:	6825      	ldr	r5, [r4, #0]
 8001112:	1d18      	adds	r0, r3, #4
 8001114:	6961      	ldr	r1, [r4, #20]
 8001116:	6030      	str	r0, [r6, #0]
 8001118:	062e      	lsls	r6, r5, #24
 800111a:	681b      	ldr	r3, [r3, #0]
 800111c:	d501      	bpl.n	8001122 <_printf_i+0x1be>
 800111e:	6019      	str	r1, [r3, #0]
 8001120:	e002      	b.n	8001128 <_printf_i+0x1c4>
 8001122:	0668      	lsls	r0, r5, #25
 8001124:	d5fb      	bpl.n	800111e <_printf_i+0x1ba>
 8001126:	8019      	strh	r1, [r3, #0]
 8001128:	2300      	movs	r3, #0
 800112a:	4616      	mov	r6, r2
 800112c:	6123      	str	r3, [r4, #16]
 800112e:	e7bc      	b.n	80010aa <_printf_i+0x146>
 8001130:	6833      	ldr	r3, [r6, #0]
 8001132:	2100      	movs	r1, #0
 8001134:	1d1a      	adds	r2, r3, #4
 8001136:	6032      	str	r2, [r6, #0]
 8001138:	681e      	ldr	r6, [r3, #0]
 800113a:	6862      	ldr	r2, [r4, #4]
 800113c:	4630      	mov	r0, r6
 800113e:	f000 f97b 	bl	8001438 <memchr>
 8001142:	b108      	cbz	r0, 8001148 <_printf_i+0x1e4>
 8001144:	1b80      	subs	r0, r0, r6
 8001146:	6060      	str	r0, [r4, #4]
 8001148:	6863      	ldr	r3, [r4, #4]
 800114a:	6123      	str	r3, [r4, #16]
 800114c:	2300      	movs	r3, #0
 800114e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001152:	e7aa      	b.n	80010aa <_printf_i+0x146>
 8001154:	4632      	mov	r2, r6
 8001156:	4649      	mov	r1, r9
 8001158:	4640      	mov	r0, r8
 800115a:	6923      	ldr	r3, [r4, #16]
 800115c:	47d0      	blx	sl
 800115e:	3001      	adds	r0, #1
 8001160:	d0ad      	beq.n	80010be <_printf_i+0x15a>
 8001162:	6823      	ldr	r3, [r4, #0]
 8001164:	079b      	lsls	r3, r3, #30
 8001166:	d413      	bmi.n	8001190 <_printf_i+0x22c>
 8001168:	68e0      	ldr	r0, [r4, #12]
 800116a:	9b03      	ldr	r3, [sp, #12]
 800116c:	4298      	cmp	r0, r3
 800116e:	bfb8      	it	lt
 8001170:	4618      	movlt	r0, r3
 8001172:	e7a6      	b.n	80010c2 <_printf_i+0x15e>
 8001174:	2301      	movs	r3, #1
 8001176:	4632      	mov	r2, r6
 8001178:	4649      	mov	r1, r9
 800117a:	4640      	mov	r0, r8
 800117c:	47d0      	blx	sl
 800117e:	3001      	adds	r0, #1
 8001180:	d09d      	beq.n	80010be <_printf_i+0x15a>
 8001182:	3501      	adds	r5, #1
 8001184:	68e3      	ldr	r3, [r4, #12]
 8001186:	9903      	ldr	r1, [sp, #12]
 8001188:	1a5b      	subs	r3, r3, r1
 800118a:	42ab      	cmp	r3, r5
 800118c:	dcf2      	bgt.n	8001174 <_printf_i+0x210>
 800118e:	e7eb      	b.n	8001168 <_printf_i+0x204>
 8001190:	2500      	movs	r5, #0
 8001192:	f104 0619 	add.w	r6, r4, #25
 8001196:	e7f5      	b.n	8001184 <_printf_i+0x220>
 8001198:	080015a4 	.word	0x080015a4
 800119c:	080015b5 	.word	0x080015b5

080011a0 <__sflush_r>:
 80011a0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80011a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011a6:	0716      	lsls	r6, r2, #28
 80011a8:	4605      	mov	r5, r0
 80011aa:	460c      	mov	r4, r1
 80011ac:	d454      	bmi.n	8001258 <__sflush_r+0xb8>
 80011ae:	684b      	ldr	r3, [r1, #4]
 80011b0:	2b00      	cmp	r3, #0
 80011b2:	dc02      	bgt.n	80011ba <__sflush_r+0x1a>
 80011b4:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80011b6:	2b00      	cmp	r3, #0
 80011b8:	dd48      	ble.n	800124c <__sflush_r+0xac>
 80011ba:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80011bc:	2e00      	cmp	r6, #0
 80011be:	d045      	beq.n	800124c <__sflush_r+0xac>
 80011c0:	2300      	movs	r3, #0
 80011c2:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80011c6:	682f      	ldr	r7, [r5, #0]
 80011c8:	6a21      	ldr	r1, [r4, #32]
 80011ca:	602b      	str	r3, [r5, #0]
 80011cc:	d030      	beq.n	8001230 <__sflush_r+0x90>
 80011ce:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80011d0:	89a3      	ldrh	r3, [r4, #12]
 80011d2:	0759      	lsls	r1, r3, #29
 80011d4:	d505      	bpl.n	80011e2 <__sflush_r+0x42>
 80011d6:	6863      	ldr	r3, [r4, #4]
 80011d8:	1ad2      	subs	r2, r2, r3
 80011da:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80011dc:	b10b      	cbz	r3, 80011e2 <__sflush_r+0x42>
 80011de:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80011e0:	1ad2      	subs	r2, r2, r3
 80011e2:	2300      	movs	r3, #0
 80011e4:	4628      	mov	r0, r5
 80011e6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80011e8:	6a21      	ldr	r1, [r4, #32]
 80011ea:	47b0      	blx	r6
 80011ec:	1c43      	adds	r3, r0, #1
 80011ee:	89a3      	ldrh	r3, [r4, #12]
 80011f0:	d106      	bne.n	8001200 <__sflush_r+0x60>
 80011f2:	6829      	ldr	r1, [r5, #0]
 80011f4:	291d      	cmp	r1, #29
 80011f6:	d82b      	bhi.n	8001250 <__sflush_r+0xb0>
 80011f8:	4a28      	ldr	r2, [pc, #160]	@ (800129c <__sflush_r+0xfc>)
 80011fa:	40ca      	lsrs	r2, r1
 80011fc:	07d6      	lsls	r6, r2, #31
 80011fe:	d527      	bpl.n	8001250 <__sflush_r+0xb0>
 8001200:	2200      	movs	r2, #0
 8001202:	6062      	str	r2, [r4, #4]
 8001204:	6922      	ldr	r2, [r4, #16]
 8001206:	04d9      	lsls	r1, r3, #19
 8001208:	6022      	str	r2, [r4, #0]
 800120a:	d504      	bpl.n	8001216 <__sflush_r+0x76>
 800120c:	1c42      	adds	r2, r0, #1
 800120e:	d101      	bne.n	8001214 <__sflush_r+0x74>
 8001210:	682b      	ldr	r3, [r5, #0]
 8001212:	b903      	cbnz	r3, 8001216 <__sflush_r+0x76>
 8001214:	6560      	str	r0, [r4, #84]	@ 0x54
 8001216:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001218:	602f      	str	r7, [r5, #0]
 800121a:	b1b9      	cbz	r1, 800124c <__sflush_r+0xac>
 800121c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001220:	4299      	cmp	r1, r3
 8001222:	d002      	beq.n	800122a <__sflush_r+0x8a>
 8001224:	4628      	mov	r0, r5
 8001226:	f7ff fbf5 	bl	8000a14 <_free_r>
 800122a:	2300      	movs	r3, #0
 800122c:	6363      	str	r3, [r4, #52]	@ 0x34
 800122e:	e00d      	b.n	800124c <__sflush_r+0xac>
 8001230:	2301      	movs	r3, #1
 8001232:	4628      	mov	r0, r5
 8001234:	47b0      	blx	r6
 8001236:	4602      	mov	r2, r0
 8001238:	1c50      	adds	r0, r2, #1
 800123a:	d1c9      	bne.n	80011d0 <__sflush_r+0x30>
 800123c:	682b      	ldr	r3, [r5, #0]
 800123e:	2b00      	cmp	r3, #0
 8001240:	d0c6      	beq.n	80011d0 <__sflush_r+0x30>
 8001242:	2b1d      	cmp	r3, #29
 8001244:	d001      	beq.n	800124a <__sflush_r+0xaa>
 8001246:	2b16      	cmp	r3, #22
 8001248:	d11d      	bne.n	8001286 <__sflush_r+0xe6>
 800124a:	602f      	str	r7, [r5, #0]
 800124c:	2000      	movs	r0, #0
 800124e:	e021      	b.n	8001294 <__sflush_r+0xf4>
 8001250:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001254:	b21b      	sxth	r3, r3
 8001256:	e01a      	b.n	800128e <__sflush_r+0xee>
 8001258:	690f      	ldr	r7, [r1, #16]
 800125a:	2f00      	cmp	r7, #0
 800125c:	d0f6      	beq.n	800124c <__sflush_r+0xac>
 800125e:	0793      	lsls	r3, r2, #30
 8001260:	bf18      	it	ne
 8001262:	2300      	movne	r3, #0
 8001264:	680e      	ldr	r6, [r1, #0]
 8001266:	bf08      	it	eq
 8001268:	694b      	ldreq	r3, [r1, #20]
 800126a:	1bf6      	subs	r6, r6, r7
 800126c:	600f      	str	r7, [r1, #0]
 800126e:	608b      	str	r3, [r1, #8]
 8001270:	2e00      	cmp	r6, #0
 8001272:	ddeb      	ble.n	800124c <__sflush_r+0xac>
 8001274:	4633      	mov	r3, r6
 8001276:	463a      	mov	r2, r7
 8001278:	4628      	mov	r0, r5
 800127a:	6a21      	ldr	r1, [r4, #32]
 800127c:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8001280:	47e0      	blx	ip
 8001282:	2800      	cmp	r0, #0
 8001284:	dc07      	bgt.n	8001296 <__sflush_r+0xf6>
 8001286:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800128a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800128e:	f04f 30ff 	mov.w	r0, #4294967295
 8001292:	81a3      	strh	r3, [r4, #12]
 8001294:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001296:	4407      	add	r7, r0
 8001298:	1a36      	subs	r6, r6, r0
 800129a:	e7e9      	b.n	8001270 <__sflush_r+0xd0>
 800129c:	20400001 	.word	0x20400001

080012a0 <_fflush_r>:
 80012a0:	b538      	push	{r3, r4, r5, lr}
 80012a2:	690b      	ldr	r3, [r1, #16]
 80012a4:	4605      	mov	r5, r0
 80012a6:	460c      	mov	r4, r1
 80012a8:	b913      	cbnz	r3, 80012b0 <_fflush_r+0x10>
 80012aa:	2500      	movs	r5, #0
 80012ac:	4628      	mov	r0, r5
 80012ae:	bd38      	pop	{r3, r4, r5, pc}
 80012b0:	b118      	cbz	r0, 80012ba <_fflush_r+0x1a>
 80012b2:	6a03      	ldr	r3, [r0, #32]
 80012b4:	b90b      	cbnz	r3, 80012ba <_fflush_r+0x1a>
 80012b6:	f7ff faa5 	bl	8000804 <__sinit>
 80012ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012be:	2b00      	cmp	r3, #0
 80012c0:	d0f3      	beq.n	80012aa <_fflush_r+0xa>
 80012c2:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80012c4:	07d0      	lsls	r0, r2, #31
 80012c6:	d404      	bmi.n	80012d2 <_fflush_r+0x32>
 80012c8:	0599      	lsls	r1, r3, #22
 80012ca:	d402      	bmi.n	80012d2 <_fflush_r+0x32>
 80012cc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80012ce:	f7ff fb9e 	bl	8000a0e <__retarget_lock_acquire_recursive>
 80012d2:	4628      	mov	r0, r5
 80012d4:	4621      	mov	r1, r4
 80012d6:	f7ff ff63 	bl	80011a0 <__sflush_r>
 80012da:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80012dc:	4605      	mov	r5, r0
 80012de:	07da      	lsls	r2, r3, #31
 80012e0:	d4e4      	bmi.n	80012ac <_fflush_r+0xc>
 80012e2:	89a3      	ldrh	r3, [r4, #12]
 80012e4:	059b      	lsls	r3, r3, #22
 80012e6:	d4e1      	bmi.n	80012ac <_fflush_r+0xc>
 80012e8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80012ea:	f7ff fb91 	bl	8000a10 <__retarget_lock_release_recursive>
 80012ee:	e7dd      	b.n	80012ac <_fflush_r+0xc>

080012f0 <__swbuf_r>:
 80012f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012f2:	460e      	mov	r6, r1
 80012f4:	4614      	mov	r4, r2
 80012f6:	4605      	mov	r5, r0
 80012f8:	b118      	cbz	r0, 8001302 <__swbuf_r+0x12>
 80012fa:	6a03      	ldr	r3, [r0, #32]
 80012fc:	b90b      	cbnz	r3, 8001302 <__swbuf_r+0x12>
 80012fe:	f7ff fa81 	bl	8000804 <__sinit>
 8001302:	69a3      	ldr	r3, [r4, #24]
 8001304:	60a3      	str	r3, [r4, #8]
 8001306:	89a3      	ldrh	r3, [r4, #12]
 8001308:	071a      	lsls	r2, r3, #28
 800130a:	d501      	bpl.n	8001310 <__swbuf_r+0x20>
 800130c:	6923      	ldr	r3, [r4, #16]
 800130e:	b943      	cbnz	r3, 8001322 <__swbuf_r+0x32>
 8001310:	4621      	mov	r1, r4
 8001312:	4628      	mov	r0, r5
 8001314:	f000 f82a 	bl	800136c <__swsetup_r>
 8001318:	b118      	cbz	r0, 8001322 <__swbuf_r+0x32>
 800131a:	f04f 37ff 	mov.w	r7, #4294967295
 800131e:	4638      	mov	r0, r7
 8001320:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001322:	6823      	ldr	r3, [r4, #0]
 8001324:	6922      	ldr	r2, [r4, #16]
 8001326:	b2f6      	uxtb	r6, r6
 8001328:	1a98      	subs	r0, r3, r2
 800132a:	6963      	ldr	r3, [r4, #20]
 800132c:	4637      	mov	r7, r6
 800132e:	4283      	cmp	r3, r0
 8001330:	dc05      	bgt.n	800133e <__swbuf_r+0x4e>
 8001332:	4621      	mov	r1, r4
 8001334:	4628      	mov	r0, r5
 8001336:	f7ff ffb3 	bl	80012a0 <_fflush_r>
 800133a:	2800      	cmp	r0, #0
 800133c:	d1ed      	bne.n	800131a <__swbuf_r+0x2a>
 800133e:	68a3      	ldr	r3, [r4, #8]
 8001340:	3b01      	subs	r3, #1
 8001342:	60a3      	str	r3, [r4, #8]
 8001344:	6823      	ldr	r3, [r4, #0]
 8001346:	1c5a      	adds	r2, r3, #1
 8001348:	6022      	str	r2, [r4, #0]
 800134a:	701e      	strb	r6, [r3, #0]
 800134c:	6962      	ldr	r2, [r4, #20]
 800134e:	1c43      	adds	r3, r0, #1
 8001350:	429a      	cmp	r2, r3
 8001352:	d004      	beq.n	800135e <__swbuf_r+0x6e>
 8001354:	89a3      	ldrh	r3, [r4, #12]
 8001356:	07db      	lsls	r3, r3, #31
 8001358:	d5e1      	bpl.n	800131e <__swbuf_r+0x2e>
 800135a:	2e0a      	cmp	r6, #10
 800135c:	d1df      	bne.n	800131e <__swbuf_r+0x2e>
 800135e:	4621      	mov	r1, r4
 8001360:	4628      	mov	r0, r5
 8001362:	f7ff ff9d 	bl	80012a0 <_fflush_r>
 8001366:	2800      	cmp	r0, #0
 8001368:	d0d9      	beq.n	800131e <__swbuf_r+0x2e>
 800136a:	e7d6      	b.n	800131a <__swbuf_r+0x2a>

0800136c <__swsetup_r>:
 800136c:	b538      	push	{r3, r4, r5, lr}
 800136e:	4b29      	ldr	r3, [pc, #164]	@ (8001414 <__swsetup_r+0xa8>)
 8001370:	4605      	mov	r5, r0
 8001372:	6818      	ldr	r0, [r3, #0]
 8001374:	460c      	mov	r4, r1
 8001376:	b118      	cbz	r0, 8001380 <__swsetup_r+0x14>
 8001378:	6a03      	ldr	r3, [r0, #32]
 800137a:	b90b      	cbnz	r3, 8001380 <__swsetup_r+0x14>
 800137c:	f7ff fa42 	bl	8000804 <__sinit>
 8001380:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001384:	0719      	lsls	r1, r3, #28
 8001386:	d422      	bmi.n	80013ce <__swsetup_r+0x62>
 8001388:	06da      	lsls	r2, r3, #27
 800138a:	d407      	bmi.n	800139c <__swsetup_r+0x30>
 800138c:	2209      	movs	r2, #9
 800138e:	602a      	str	r2, [r5, #0]
 8001390:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001394:	f04f 30ff 	mov.w	r0, #4294967295
 8001398:	81a3      	strh	r3, [r4, #12]
 800139a:	e033      	b.n	8001404 <__swsetup_r+0x98>
 800139c:	0758      	lsls	r0, r3, #29
 800139e:	d512      	bpl.n	80013c6 <__swsetup_r+0x5a>
 80013a0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80013a2:	b141      	cbz	r1, 80013b6 <__swsetup_r+0x4a>
 80013a4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80013a8:	4299      	cmp	r1, r3
 80013aa:	d002      	beq.n	80013b2 <__swsetup_r+0x46>
 80013ac:	4628      	mov	r0, r5
 80013ae:	f7ff fb31 	bl	8000a14 <_free_r>
 80013b2:	2300      	movs	r3, #0
 80013b4:	6363      	str	r3, [r4, #52]	@ 0x34
 80013b6:	89a3      	ldrh	r3, [r4, #12]
 80013b8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80013bc:	81a3      	strh	r3, [r4, #12]
 80013be:	2300      	movs	r3, #0
 80013c0:	6063      	str	r3, [r4, #4]
 80013c2:	6923      	ldr	r3, [r4, #16]
 80013c4:	6023      	str	r3, [r4, #0]
 80013c6:	89a3      	ldrh	r3, [r4, #12]
 80013c8:	f043 0308 	orr.w	r3, r3, #8
 80013cc:	81a3      	strh	r3, [r4, #12]
 80013ce:	6923      	ldr	r3, [r4, #16]
 80013d0:	b94b      	cbnz	r3, 80013e6 <__swsetup_r+0x7a>
 80013d2:	89a3      	ldrh	r3, [r4, #12]
 80013d4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80013d8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80013dc:	d003      	beq.n	80013e6 <__swsetup_r+0x7a>
 80013de:	4621      	mov	r1, r4
 80013e0:	4628      	mov	r0, r5
 80013e2:	f000 f85c 	bl	800149e <__smakebuf_r>
 80013e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80013ea:	f013 0201 	ands.w	r2, r3, #1
 80013ee:	d00a      	beq.n	8001406 <__swsetup_r+0x9a>
 80013f0:	2200      	movs	r2, #0
 80013f2:	60a2      	str	r2, [r4, #8]
 80013f4:	6962      	ldr	r2, [r4, #20]
 80013f6:	4252      	negs	r2, r2
 80013f8:	61a2      	str	r2, [r4, #24]
 80013fa:	6922      	ldr	r2, [r4, #16]
 80013fc:	b942      	cbnz	r2, 8001410 <__swsetup_r+0xa4>
 80013fe:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001402:	d1c5      	bne.n	8001390 <__swsetup_r+0x24>
 8001404:	bd38      	pop	{r3, r4, r5, pc}
 8001406:	0799      	lsls	r1, r3, #30
 8001408:	bf58      	it	pl
 800140a:	6962      	ldrpl	r2, [r4, #20]
 800140c:	60a2      	str	r2, [r4, #8]
 800140e:	e7f4      	b.n	80013fa <__swsetup_r+0x8e>
 8001410:	2000      	movs	r0, #0
 8001412:	e7f7      	b.n	8001404 <__swsetup_r+0x98>
 8001414:	20000010 	.word	0x20000010

08001418 <_sbrk_r>:
 8001418:	b538      	push	{r3, r4, r5, lr}
 800141a:	2300      	movs	r3, #0
 800141c:	4d05      	ldr	r5, [pc, #20]	@ (8001434 <_sbrk_r+0x1c>)
 800141e:	4604      	mov	r4, r0
 8001420:	4608      	mov	r0, r1
 8001422:	602b      	str	r3, [r5, #0]
 8001424:	f7ff f8ee 	bl	8000604 <_sbrk>
 8001428:	1c43      	adds	r3, r0, #1
 800142a:	d102      	bne.n	8001432 <_sbrk_r+0x1a>
 800142c:	682b      	ldr	r3, [r5, #0]
 800142e:	b103      	cbz	r3, 8001432 <_sbrk_r+0x1a>
 8001430:	6023      	str	r3, [r4, #0]
 8001432:	bd38      	pop	{r3, r4, r5, pc}
 8001434:	200001c0 	.word	0x200001c0

08001438 <memchr>:
 8001438:	4603      	mov	r3, r0
 800143a:	b510      	push	{r4, lr}
 800143c:	b2c9      	uxtb	r1, r1
 800143e:	4402      	add	r2, r0
 8001440:	4293      	cmp	r3, r2
 8001442:	4618      	mov	r0, r3
 8001444:	d101      	bne.n	800144a <memchr+0x12>
 8001446:	2000      	movs	r0, #0
 8001448:	e003      	b.n	8001452 <memchr+0x1a>
 800144a:	7804      	ldrb	r4, [r0, #0]
 800144c:	3301      	adds	r3, #1
 800144e:	428c      	cmp	r4, r1
 8001450:	d1f6      	bne.n	8001440 <memchr+0x8>
 8001452:	bd10      	pop	{r4, pc}

08001454 <__swhatbuf_r>:
 8001454:	b570      	push	{r4, r5, r6, lr}
 8001456:	460c      	mov	r4, r1
 8001458:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800145c:	4615      	mov	r5, r2
 800145e:	2900      	cmp	r1, #0
 8001460:	461e      	mov	r6, r3
 8001462:	b096      	sub	sp, #88	@ 0x58
 8001464:	da0c      	bge.n	8001480 <__swhatbuf_r+0x2c>
 8001466:	89a3      	ldrh	r3, [r4, #12]
 8001468:	2100      	movs	r1, #0
 800146a:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800146e:	bf14      	ite	ne
 8001470:	2340      	movne	r3, #64	@ 0x40
 8001472:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001476:	2000      	movs	r0, #0
 8001478:	6031      	str	r1, [r6, #0]
 800147a:	602b      	str	r3, [r5, #0]
 800147c:	b016      	add	sp, #88	@ 0x58
 800147e:	bd70      	pop	{r4, r5, r6, pc}
 8001480:	466a      	mov	r2, sp
 8001482:	f000 f849 	bl	8001518 <_fstat_r>
 8001486:	2800      	cmp	r0, #0
 8001488:	dbed      	blt.n	8001466 <__swhatbuf_r+0x12>
 800148a:	9901      	ldr	r1, [sp, #4]
 800148c:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001490:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001494:	4259      	negs	r1, r3
 8001496:	4159      	adcs	r1, r3
 8001498:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800149c:	e7eb      	b.n	8001476 <__swhatbuf_r+0x22>

0800149e <__smakebuf_r>:
 800149e:	898b      	ldrh	r3, [r1, #12]
 80014a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80014a2:	079d      	lsls	r5, r3, #30
 80014a4:	4606      	mov	r6, r0
 80014a6:	460c      	mov	r4, r1
 80014a8:	d507      	bpl.n	80014ba <__smakebuf_r+0x1c>
 80014aa:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80014ae:	6023      	str	r3, [r4, #0]
 80014b0:	6123      	str	r3, [r4, #16]
 80014b2:	2301      	movs	r3, #1
 80014b4:	6163      	str	r3, [r4, #20]
 80014b6:	b003      	add	sp, #12
 80014b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80014ba:	466a      	mov	r2, sp
 80014bc:	ab01      	add	r3, sp, #4
 80014be:	f7ff ffc9 	bl	8001454 <__swhatbuf_r>
 80014c2:	9f00      	ldr	r7, [sp, #0]
 80014c4:	4605      	mov	r5, r0
 80014c6:	4639      	mov	r1, r7
 80014c8:	4630      	mov	r0, r6
 80014ca:	f7ff fb0d 	bl	8000ae8 <_malloc_r>
 80014ce:	b948      	cbnz	r0, 80014e4 <__smakebuf_r+0x46>
 80014d0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80014d4:	059a      	lsls	r2, r3, #22
 80014d6:	d4ee      	bmi.n	80014b6 <__smakebuf_r+0x18>
 80014d8:	f023 0303 	bic.w	r3, r3, #3
 80014dc:	f043 0302 	orr.w	r3, r3, #2
 80014e0:	81a3      	strh	r3, [r4, #12]
 80014e2:	e7e2      	b.n	80014aa <__smakebuf_r+0xc>
 80014e4:	89a3      	ldrh	r3, [r4, #12]
 80014e6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80014ea:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80014ee:	81a3      	strh	r3, [r4, #12]
 80014f0:	9b01      	ldr	r3, [sp, #4]
 80014f2:	6020      	str	r0, [r4, #0]
 80014f4:	b15b      	cbz	r3, 800150e <__smakebuf_r+0x70>
 80014f6:	4630      	mov	r0, r6
 80014f8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80014fc:	f000 f81e 	bl	800153c <_isatty_r>
 8001500:	b128      	cbz	r0, 800150e <__smakebuf_r+0x70>
 8001502:	89a3      	ldrh	r3, [r4, #12]
 8001504:	f023 0303 	bic.w	r3, r3, #3
 8001508:	f043 0301 	orr.w	r3, r3, #1
 800150c:	81a3      	strh	r3, [r4, #12]
 800150e:	89a3      	ldrh	r3, [r4, #12]
 8001510:	431d      	orrs	r5, r3
 8001512:	81a5      	strh	r5, [r4, #12]
 8001514:	e7cf      	b.n	80014b6 <__smakebuf_r+0x18>
	...

08001518 <_fstat_r>:
 8001518:	b538      	push	{r3, r4, r5, lr}
 800151a:	2300      	movs	r3, #0
 800151c:	4d06      	ldr	r5, [pc, #24]	@ (8001538 <_fstat_r+0x20>)
 800151e:	4604      	mov	r4, r0
 8001520:	4608      	mov	r0, r1
 8001522:	4611      	mov	r1, r2
 8001524:	602b      	str	r3, [r5, #0]
 8001526:	f7ff f847 	bl	80005b8 <_fstat>
 800152a:	1c43      	adds	r3, r0, #1
 800152c:	d102      	bne.n	8001534 <_fstat_r+0x1c>
 800152e:	682b      	ldr	r3, [r5, #0]
 8001530:	b103      	cbz	r3, 8001534 <_fstat_r+0x1c>
 8001532:	6023      	str	r3, [r4, #0]
 8001534:	bd38      	pop	{r3, r4, r5, pc}
 8001536:	bf00      	nop
 8001538:	200001c0 	.word	0x200001c0

0800153c <_isatty_r>:
 800153c:	b538      	push	{r3, r4, r5, lr}
 800153e:	2300      	movs	r3, #0
 8001540:	4d05      	ldr	r5, [pc, #20]	@ (8001558 <_isatty_r+0x1c>)
 8001542:	4604      	mov	r4, r0
 8001544:	4608      	mov	r0, r1
 8001546:	602b      	str	r3, [r5, #0]
 8001548:	f7ff f845 	bl	80005d6 <_isatty>
 800154c:	1c43      	adds	r3, r0, #1
 800154e:	d102      	bne.n	8001556 <_isatty_r+0x1a>
 8001550:	682b      	ldr	r3, [r5, #0]
 8001552:	b103      	cbz	r3, 8001556 <_isatty_r+0x1a>
 8001554:	6023      	str	r3, [r4, #0]
 8001556:	bd38      	pop	{r3, r4, r5, pc}
 8001558:	200001c0 	.word	0x200001c0

0800155c <_init>:
 800155c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800155e:	bf00      	nop
 8001560:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001562:	bc08      	pop	{r3}
 8001564:	469e      	mov	lr, r3
 8001566:	4770      	bx	lr

08001568 <_fini>:
 8001568:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800156a:	bf00      	nop
 800156c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800156e:	bc08      	pop	{r3}
 8001570:	469e      	mov	lr, r3
 8001572:	4770      	bx	lr
